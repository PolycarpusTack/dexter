{
	"info": {
		"_postman_id": "15720a04-5450-4aeb-80a1-3a760a1e583f",
		"name": "Sentry API Collection",
		"description": "# The Sentry API\n\nThe Sentry API is used for submitting events to the Sentry collector as well as exporting and managing data. The reporting and web APIs are individually versioned. This document refers to the web APIs only. For information about the reporting API see [<i>SDK Development</i>](https://develop.sentry.dev/sdk/overview/).\n\n## To Use This Collection\n\n#### Organization Slug\n\nAdd your Sentry organization_slug to the Collection Variable or as an Environment Variable (if you are access multiple Sentry Organizations)\n\n#### Authentication Token (Bearer Token)\n\nYou must create a Sentry Auth Token ([https://docs.sentry.io/product/integrations/integration-platform/#internal-integrations](https://docs.sentry.io/product/integrations/integration-platform/#internal-integrations)) and add it to the Collection Variables or an Environment Variable (Environment Variables take precedence in Postman)\n\n#### Path Variables\n\nMany of the endpoints have one or more path variables (:project_slug). These are required to access the Sentry resource in question.\n\n## Versioning\n\nThe current version of the web API is known as **v0** and is considered to be in a draft phase. While we don’t expect public endpoints to change greatly, keep in mind that the API is still under development.\n\n## Getting Started\n\n- [Authentication](https://docs.sentry.io/api/auth/)\n    \n- [Pagination](https://docs.sentry.io/api/pagination/)\n    \n- [Permissions](https://docs.sentry.io/api/permissions/)\n    \n- [Rate Limits](https://docs.sentry.io/api/ratelimits)\n    \n- [Requests](https://docs.sentry.io/api/requests/)\n    \n\n**Note:** The URL endpoints are sensitive to the trailing \"/\", which is required",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2727514"
	},
	"item": [
		{
			"name": "Alerts",
			"item": [
				{
					"name": "Create Project Issue Alert Rule",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conditions\": [\n        {\n            \"id\": \"sentry.rules.conditions.first_seen_event.FirstSeenEventCondition\",\n            \"label\": \"label...\",\n            \"name\": \"A new issue is created\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"match\": \"co\",\n            \"id\": \"sentry.rules.filters.tagged_event.TaggedEventFilter\",\n            \"key\": \"release\",\n            \"value\": \"23.10.1\",\n            \"name\": \"The event's tags match release contains 23.10.1\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"targetType\": \"Member\",\n            \"fallthroughType\": \"ActiveMembers\",\n            \"id\": \"sentry.mail.actions.NotifyEmailAction\",\n            \"targetIdentifier\": 2090953,\n            \"name\": \"Send a notification to Member\"\n        }\n    ],\n    \"actionMatch\": \"any\",\n    \"filterMatch\": \"all\",\n    \"frequency\": 1440,\n    \"name\": \"Issue Alert via API\",\n    \"owner\": \"team:1168178\",\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"environment\": \"production\",\n    \"status\": \"active\",\n    \"snooze\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"rules",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "backend-python"
								}
							]
						},
						"description": "# Create an Issue Alert Rule for a Project\n\n[https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/<br>](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/)  \nPOST/api/0/projects/{organization_slug}/{project_slug}/rules/\n\nCreate a new issue alert rule for the given project.\n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers: specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters: help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions: specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule.\n\n`actionMatch` _(string)_REQUIRED\n\nA string determining which of the conditions need to be true before any filters are evaluated.\n\n- `all` - All conditions must evaluate to true.\n    \n- `any` - At least one of the conditions must evaluate to true.\n    \n- `none` - All conditions must evaluate to false.\n    \n\n`conditions` _(array(object))_REQUIRED\n\nA list of triggers that determine when the rule fires. See below for a list of possible conditions.\n\n**A new issue is created**\n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.first_seen_event.FirstSeenEventCondition\"\n}\n\n ```\n\n**The issue changes state from resolved to unresolved**\n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.regression_event.RegressionEventCondition\"\n}\n\n ```\n\n**The issue is seen more than** **`value`** **times in** **`interval`**\n\n- `value` - An integer\n    \n- `interval` - Valid values are `1m`, `5m`, `15m`, `1h`, `1d`, `1w` and `30d` (`m` for minutes, `h` for hours, `d` for days, and `w` for weeks).\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.event_frequency.EventFrequencyCondition\",\n    \"value\": 500,\n    \"interval\": \"1h\"\n}\n\n ```\n\n**The issue is seen by more than** **`value`** **users in** **`interval`**\n\n- `value` - An integer\n    \n- `interval` - Valid values are `1m`, `5m`, `15m`, `1h`, `1d`, `1w` and `30d` (`m` for minutes, `h` for hours, `d` for days, and `w` for weeks).\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition\",\n    \"value\": 1000,\n    \"interval\": \"15m\"\n}\n\n ```\n\n**The issue affects more than** **`value`** **percent of sessions in** **`interval`**\n\n- `value` - An integer from 0 to 100\n    \n- `interval` - Valid values are `5m`, `10m`, `30m`, and `1h` (`m` for minutes, `h` for hours).\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.event_frequency.EventFrequencyPercentCondition\",\n    \"value\": 50,\n    \"interval\": \"10m\"\n}\n\n ```\n\n`actions` _(array(object))_REQUIRED\n\nA list of actions that take place when all required conditions and filters for the rule are met. See below for a list of possible actions.\n\n**Send a notification to Suggested Assignees**\n\n- `fallthroughType` - Who the notification should be sent to if there are no suggested assignees. Valid values are `ActiveMembers`, `AllMembers`, and `NoOne`.\n    \n\nJSONCopied\n\n```\n{\n    \"id\" - \"sentry.mail.actions.NotifyEmailAction\",\n    \"targetType\" - \"IssueOwners\",\n    \"fallthroughType\" - \"ActiveMembers\"\n}\n\n ```\n\n**Send a notification to a Member or a Team**\n\n- `targetType` - One of `Member` or `Team`.\n    \n- `fallthroughType` - Who the notification should be sent to if it cannot be sent to the original target. Valid values are `ActiveMembers`, `AllMembers`, and `NoOne`.\n    \n- `targetIdentifier` - The ID of the Member or Team the notification should be sent to.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.mail.actions.NotifyEmailAction\",\n    \"targetType\": \"Team\"\n    \"fallthroughType\": \"AllMembers\"\n    \"targetIdentifier\": 4524986223\n}\n\n ```\n\n**Send a Slack notification**\n\n- `workspace` - The integration ID associated with the Slack workspace.\n    \n- `channel` - The name of the channel to send the notification to (e.g., #critical, Jane Schmidt).\n    \n- `channel_id` (optional) - The ID of the channel to send the notification to.\n    \n- `tags` - A string of tags to show in the notification, separated by commas (e.g., \"environment, user, my_tag\").\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.slack.notify_action.SlackNotifyServiceAction\",\n    \"workspace\": 293854098,\n    \"channel\": \"#warning\",\n    \"tags\": \"environment,level\"\n}\n\n ```\n\n**Send a Microsoft Teams notification**\n\n- `team` - The integration ID associated with the Microsoft Teams team.\n    \n- `channel` - The name of the channel to send the notification to.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.msteams.notify_action.MsTeamsNotifyServiceAction\",\n    \"team\": 23465424,\n    \"channel\": \"General\"\n}\n\n ```\n\n**Send a Discord notification**\n\n- `server` - The integration ID associated with the Discord server.\n    \n- `channel_id` - The ID of the channel to send the notification to.\n    \n- `tags` - A string of tags to show in the notification, separated by commas (e.g., \"environment, user, my_tag\").\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.discord.notify_action.DiscordNotifyServiceAction\",\n    \"server\": 63408298,\n    \"channel_id\": 94732897,\n    \"tags\": \"browser,user\"\n}\n\n ```\n\n**Create a Jira Ticket**\n\n- `integration` - The integration ID associated with Jira.\n    \n- `project` - The ID of the Jira project.\n    \n- `issuetype` - The ID of the type of issue that the ticket should be created as.\n    \n- `dynamic_form_fields` (optional) - A list of any custom fields you want to include in the ticket as objects.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.jira.notify_action.JiraCreateTicketAction\",\n    \"integration\": 321424,\n    \"project\": \"349719\"\n    \"issueType\": \"1\"\n}\n\n ```\n\n**Create a Jira Server Ticket**\n\n- `integration` - The integration ID associated with Jira Server.\n    \n- `project` - The ID of the Jira Server project.\n    \n- `issuetype` - The ID of the type of issue that the ticket should be created as.\n    \n- `dynamic_form_fields` (optional) - A list of any custom fields you want to include in the ticket as objects.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.jira_server.notify_action.JiraServerCreateTicketAction\",\n    \"integration\": 321424,\n    \"project\": \"349719\"\n    \"issueType\": \"1\"\n}\n\n ```\n\n**Create a GitHub Issue**\n\n- `integration` - The integration ID associated with GitHub.\n    \n- `repo` - The name of the repository to create the issue in.\n    \n- `title` - The title of the issue.\n    \n- `body` (optional) - The contents of the issue.\n    \n- `assignee` (optional) - The GitHub user to assign the issue to.\n    \n- `labels` (optional) - A list of labels to assign to the issue.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.github.notify_action.GitHubCreateTicketAction\",\n    \"integration\": 93749,\n    \"repo\": default,\n    \"title\": \"My Test Issue\",\n    \"assignee\": \"Baxter the Hacker\",\n    \"labels\": [\"bug\", \"p1\"]\n    \"\"\n}\n\n ```\n\n**Create an Azure DevOps work item**\n\n- `integration` - The integration ID.\n    \n- `project` - The ID of the Azure DevOps project.\n    \n- `work_item_type` - The type of work item to create.\n    \n- `dynamic_form_fields` (optional) - A list of any custom fields you want to include in the work item as objects.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.vsts.notify_action.AzureDevopsCreateTicketAction\",\n    \"integration\": 294838,\n    \"project\": \"0389485\",\n    \"work_item_type\": \"Microsoft.VSTS.WorkItemTypes.Task\",\n}\n\n ```\n\n**Send a PagerDuty notification**\n\n- `account` - The integration ID associated with the PagerDuty account.\n    \n- `service` - The ID of the service to send the notification to.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.pagerduty.notify_action.PagerDutyNotifyServiceAction\",\n    \"account\": 92385907,\n    \"service\": 9823924\n}\n\n ```\n\n**Send an Opsgenie notification**\n\n- `account` - The integration ID associated with the Opsgenie account.\n    \n- `team` - The ID of the Opsgenie team to send the notification to.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.integrations.opsgenie.notify_action.OpsgenieNotifyTeamAction\",\n    \"account\": 8723897589,\n    \"team\": \"9438930258-fairy\"\n}\n\n ```\n\n**Send a notification to a service**\n\n- `service` - The plugin slug.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.actions.notify_event_service.NotifyEventServiceAction\",\n    \"service\": \"mail\"\n}\n\n ```\n\n**Send a notification to a Sentry app with a custom webhook payload**\n\n- `settings` - A list of objects denoting the settings each action will be created with. All required fields must be included.\n    \n- `sentryAppInstallationUuid` - The ID for the Sentry app\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.actions.notify_event_sentry_app.NotifyEventSentryAppAction\",\n    \"settings\": [\n        {\"name\": \"title\", \"value\": \"Team Rocket\"},\n        {\"name\": \"summary\", \"value\": \"We're blasting off again.\"},\n    ],\n    \"sentryAppInstallationUuid\": 643522\n    \"hasSchemaFormConfig\": true\n}\n\n ```\n\n**Send a notification (for all legacy integrations)**\n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.actions.notify_event.NotifyEventAction\"\n}\n\n ```\n\n`frequency` _(integer)_REQUIRED\n\nHow often to perform the actions once for an issue, in minutes. The valid range is `5` to `43200`.\n\n`environment` _(string)_\n\nThe name of the environment to filter by.\n\n`filterMatch` _(string)_\n\nA string determining which filters need to be true before any actions take place. Required when a value is provided for `filters`.\n\n- `all` - All filters must evaluate to true.\n    \n- `any` - At least one of the filters must evaluate to true.\n    \n- `none` - All filters must evaluate to false.\n    \n\n`filters` _(array(object))_\n\nA list of filters that determine if a rule fires after the necessary conditions have been met. See below for a list of possible filters.\n\n**The issue is** **`comparison_type`** **than** **`value`** **`time`**\n\n- `comparison_type` - One of `older` or `newer`\n    \n- `value` - An integer\n    \n- `time` - The unit of time. Valid values are `minute`, `hour`, `day`, and `week`.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.age_comparison.AgeComparisonFilter\",\n    \"comparison_type\": \"older\",\n    \"value\": 3,\n    \"time\": \"week\"\n}\n\n ```\n\n**The issue has happened at least** **`value`** **times**\n\n- `value` - An integer\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.issue_occurrences.IssueOccurrencesFilter\",\n    \"value\": 120\n}\n\n ```\n\n**The issue is assigned to No One**\n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.assigned_to.AssignedToFilter\",\n    \"targetType\": \"Unassigned\"\n}\n\n ```\n\n**The issue is assigned to** **`targetType`**\n\n- `targetType` - One of `Team` or `Member`\n    \n- `targetIdentifier` - The target's ID\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.assigned_to.AssignedToFilter\",\n    \"targetType\": \"Member\",\n    \"targetIdentifier\": 895329789\n}\n\n ```\n\n**The event is from the latest release**\n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.latest_release.LatestReleaseFilter\"\n}\n\n ```\n\n**The issue's category is equal to** **`value`**\n\n- `value` - An integer correlated with a category. Valid values are `1` (Error), `2` (Performance), `3` (Profile), `4` (Cron), and `5` (Replay).\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.issue_category.IssueCategoryFilter\",\n    \"value\": 2\n}\n\n ```\n\n**The event's** **`attribute`** **value** **`match`** **`value`**\n\n- `attribute` - Valid values are `message`, `platform`, `environment`, `type`, `error.handled`, `error.unhandled`, `error.main_thread`, `exception.type`, `exception.value`, `user.id`, `user.email`, `user.username`, `user.ip_address`, `http.method`, `http.url`, `http.status_code`, `sdk.name`, `stacktrace.code`, `stacktrace.module`, `stacktrace.filename`, `stacktrace.abs_path`, `stacktrace.package`, `unreal.crashtype`, and `app.in_foreground`.\n    \n- `match` - The comparison operator. Valid values are `eq` (equals), `ne` (does not equal), `sw` (starts with), `ew` (ends with), `co` (contains), `nc` (does not contain), `is` (is set), and `ns` (is not set).\n    \n- `value` - A string. Not required when `match` is `is` or `ns`.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.conditions.event_attribute.EventAttributeCondition\",\n    \"attribute\": \"http.url\",\n    \"match\": \"nc\",\n    \"value\": \"localhost\"\n}\n\n ```\n\n**The event's tags match** **`key`** **`match`** **`value`**\n\n- `key` - The tag\n    \n- `match` - The comparison operator. Valid values are `eq` (equals), `ne` (does not equal), `sw` (starts with), `ew` (ends with), `co` (contains), `nc` (does not contain), `is` (is set), and `ns` (is not set).\n    \n- `value` - A string. Not required when `match` is `is` or `ns`.\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.tagged_event.TaggedEventFilter\",\n    \"key\": \"level\",\n    \"match\": \"eq\"\n    \"value\": \"error\"\n}\n\n ```\n\n**The event's level is** **`match`** **`level`**\n\n- `match` - Valid values are `eq`, `gte`, and `lte`.\n    \n- `level` - Valid values are `50` (fatal), `40` (error), `30` (warning), `20` (info), `10` (debug), `0` (sample).\n    \n\nJSONCopied\n\n```\n{\n    \"id\": \"sentry.rules.filters.level.LevelFilter\",\n    \"match\": \"gte\"\n    \"level\": \"50\"\n}\n\n ```\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "Create Org Metric Alert Rule",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Release Version Alert\",\n    \"status\": 0,\n    \"queryType\": 0,\n    \"dataset\": \"events\",\n    \"query\": \"release.version:>=23.2.2 AND release.version:<=23.7.1\",\n    \"aggregate\": \"count()\",\n    \"thresholdType\": 0,\n    \"resolveThreshold\": 300.0,s\n    \"timeWindow\": 60.0,\n    \"environment\": null,\n    \"resolution\": 1.0,\n    \"thresholdPeriod\": 1,\n    \"triggers\": [\n        {\n            \"id\": \"300559\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"critical\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 500.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.979874Z\",\n            \"actions\": [\n                {\n                    \"id\": \"288803\",\n                    \"alertRuleTriggerId\": \"300559\",\n                    \"type\": \"email\",\n                    \"targetType\": \"user\",\n                    \"targetIdentifier\": \"2090953\",\n                    \"inputChannelId\": null,\n                    \"integrationId\": null,\n                    \"sentryAppId\": null,\n                    \"dateCreated\": \"2023-10-12T18:48:31.987547Z\",\n                    \"desc\": \"Send a notification to dirk.nielsen@sentry.io\"\n                }\n            ]\n        },\n        {\n            \"id\": \"300560\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"warning\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 400.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.993283Z\",\n            \"actions\": []\n        }\n    ],\n    \"projects\": [\n        \"backend-aspnetcore\"\n    ],\n    \"includeAllProjects\": false,\n    \"owner\": \"team:1168178\",\n    \"originalAlertRuleId\": null,\n    \"comparisonDelta\": null,\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"excludedProjects\": [],\n    \"eventTypes\": [\n        \"error\"\n    ],\n    \"snooze\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"alert-rules",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							]
						},
						"description": "# Create a Metric Alert Rule for an Organization\n\n[https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/<br>](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/)  \nPOST/api/0/organizations/{organization_slug}/alert-rules/\n\nCreate a new metric alert rule for the given organization.\n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n## Metric Alert Rule Types\n\nBelow are the types of metric alert rules you can create and the parameter values required to set them up. All other parameters can be customized based on how you want the alert rule to work. Scroll down to Body Parameters for more information. Visit the [Alert Types](https://docs.sentry.io/product/alerts/alert-types/#metric-alerts) docs for more details on each metric alert rule type.\n\n### [Number of Errors](https://docs.sentry.io/product/alerts/alert-types/#number-of-errors)\n\n- `eventTypes`: Any of `error` or `default`.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 0,\n    \"dataset\": \"events\",\n    \"aggregate\": \"count()\",\n    \"eventTypes\": [\"error\", \"default\"]\n}\n\n ```\n\n### [Users Experiencing Errors](https://docs.sentry.io/product/alerts/alert-types/#users-experiencing-errors)\n\n- `eventTypes`: Any of `error` or `default`.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 0,\n    \"dataset\": \"events\",\n    \"aggregate\": \"count_unique(user)\"\n}\n\n ```\n\n### [Crash Free Session Rate](https://docs.sentry.io/product/alerts/alert-types/#crash-free-session-rate)\n\nJSONCopied\n\n```\n{\n    \"queryType\": 2,\n    \"dataset\": \"metrics\",\n    \"aggregate\": \"percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate\"\n}\n\n ```\n\n### [Crash Free User Rate](https://docs.sentry.io/product/alerts/alert-types/#crash-free-user-rate)\n\nJSONCopied\n\n```\n{\n    \"queryType\": 2,\n    \"dataset\": \"metrics\",\n    \"aggregate\": \"percentage(users_crashed, users) AS _crash_rate_alert_aggregate\"\n}\n\n ```\n\n### [Throughput](https://docs.sentry.io/product/alerts/alert-types/#throughput)\n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"transactions\",\n    \"aggregate\": \"count()\"\n}\n\n ```\n\n### [Transaction Duration](https://docs.sentry.io/product/alerts/alert-types/#transaction-duration)\n\n- `dataset`: If a custom percentile is used, `dataset` is `transactions`. Otherwise, `dataset` is `generic_metrics`.\n    \n- `aggregate`: Valid values are `avg(transaction.duration)`, `p50(transaction.duration)`, `p75(transaction.duration)`, `p95(transaction.duration)`, `p99(transaction.duration)`, `p100(transaction.duration)`, and `percentile(transaction.duration,x)`, where `x` is your custom percentile.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"generic_metrics\",\n    \"aggregate\": \"avg(transaction.duration)\"\n}\n\n ```\n\n### [Apdex](https://docs.sentry.io/product/alerts/alert-types/#apdex)\n\n- `aggregate`: `apdex(x)` where `x` is the value of the Apdex score.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"transactions\",\n    \"aggregate\": \"apdex(300)\"\n}\n\n ```\n\n### [Failure Rate](https://docs.sentry.io/product/alerts/alert-types/#failure-rate)\n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"transactions\",\n    \"aggregate\": \"failure_rate()\"\n}\n\n ```\n\n### [Largest Contentful Paint](https://docs.sentry.io/product/alerts/alert-types/#largest-contentful-display)\n\n- `dataset`: If a custom percentile is used, `dataset` is `transactions`. Otherwise, `dataset` is `generic_metrics`.\n    \n- `aggregate`: Valid values are `avg(measurements.lcp)`, `p50(measurements.lcp)`, `p75(measurements.lcp)`, `p95(measurements.lcp)`, `p99(measurements.lcp)`, `p100(measurements.lcp)`, and `percentile(measurements.lcp,x)`, where `x` is your custom percentile.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"generic_metrics\",\n    \"aggregate\": \"p50(measurements.lcp)\"\n}\n\n ```\n\n### [First Input Delay](https://docs.sentry.io/product/alerts/alert-types/#first-input-delay)\n\n- `dataset`: If a custom percentile is used, `dataset` is `transactions`. Otherwise, `dataset` is `generic_metrics`.\n    \n- `aggregate`: Valid values are `avg(measurements.fid)`, `p50(measurements.fid)`, `p75(measurements.fid)`, `p95(measurements.fid)`, `p99(measurements.fid)`, `p100(measurements.fid)`, and `percentile(measurements.fid,x)`, where `x` is your custom percentile.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"generic_metrics\",\n    \"aggregate\": \"p100(measurements.fid)\"\n}\n\n ```\n\n### [Cumulative Layout Shift](https://docs.sentry.io/product/alerts/alert-types/#cumulative-layout-shift)\n\n- `dataset`: If a custom percentile is used, `dataset` is `transactions`. Otherwise, `dataset` is `generic_metrics`.\n    \n- `aggregate`: Valid values are `avg(measurements.cls)`, `p50(measurements.cls)`, `p75(measurements.cls)`, `p95(measurements.cls)`, `p99(measurements.cls)`, `p100(measurements.cls)`, and `percentile(measurements.cls,x)`, where `x` is your custom percentile.\n    \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"transactions\",\n    \"aggregate\": \"percentile(measurements.cls,0.2)\"\n}\n\n ```\n\n### [Custom Metric](https://docs.sentry.io/product/alerts/alert-types/#custom-metric)\n\n- `dataset`: If a custom percentile is used, `dataset` is `transactions`. Otherwise, `dataset` is `generic_metrics`.\n    \n- `aggregate`: Valid values are:\n    \n    - `avg(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `p50(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `p75(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `p95(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `p99(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `p100(x)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`.\n        \n    - `percentile(x,y)`, where `x` is `transaction.duration`, `measurements.cls`, `measurements.fcp`, `measurements.fid`, `measurements.fp`, `measurements.lcp`, `measurements.ttfb`, or `measurements.ttfb.requesttime`, and `y` is the custom percentile.\n        \n    - `failure_rate()`\n        \n    - `apdex(x)`, where `x` is the value of the Apdex score.\n        \n    - `count()`\n        \n\nJSONCopied\n\n```\n{\n    \"queryType\": 1,\n    \"dataset\": \"generic_metrics\",\n    \"aggregate\": \"p75(measurements.ttfb)\"\n}\n\n ```\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule, which has a maximimum length of 256 characters.\n\n`aggregate` _(string)_REQUIRED\n\nA string representing the aggregate function used in this alert rule. Valid aggregate functions are `count`, `count_unique`, `percentage`, `avg`, `apdex`, `failure_rate`, `p50`, `p75`, `p95`, `p99`, `p100`, and `percentile`. See [Metric Alert Rule Types](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`timeWindow` _(integer)_REQUIRED\n\nThe time period to aggregate over.\n\n- `1` - 1 minute\n    \n- `5` - 5 minutes\n    \n- `10` - 10 minutes\n    \n- `15` - 15 minutes\n    \n- `30` - 30 minutes\n    \n- `60` - 1 hour\n    \n- `120` - 2 hours\n    \n- `240` - 4 hours\n    \n- `1440` - 24 hours\n    \n\n`projects` _(array(string))_REQUIRED\n\nMetric alerts are currently limited to one project. The array should contain a single slug, representing the project to filter by.\n\n`query` _(string)_REQUIRED\n\nAn event search query to subscribe to and monitor for alerts. For example, to filter transactions so that only those with status code 400 are included, you could use `\"query\": \"http.status_code:400\"`. Use an empty string for no filter.\n\n`thresholdType` _(integer)_REQUIRED\n\nThe comparison operator for the critical and warning thresholds. The comparison operator for the resolved threshold is automatically set to the opposite operator. When a percentage change threshold is used, `0` is equivalent to \"Higher than\" and `1` is equivalent to \"Lower than\".\n\n- `0` - Above\n    \n- `1` - Below\n    \n\n`triggers` _(array(undefined))_REQUIRED\n\nA list of triggers, where each trigger is an object with the following fields:\n\n- `label`: One of `critical` or `warning`. A `critical` trigger is always required.\n    \n- `alertThreshold`: The value that the subscription needs to reach to trigger the alert rule.\n    \n- `actions`: A list of actions that take place when the threshold is met. Set as an empty list if no actions are to take place.\n    \n\nJSONCopied\n\n```\ntriggers: [\n    {\n        \"label\": \"critical\",\n        \"alertThreshold\": 50,\n        \"actions\": [\n            {\n                \"type\": \"slack\",\n                \"targetType\": \"specific\",\n                \"targetIdentifier\": \"#get-crit\",\n                \"inputChannelId\": 2454362\n                \"integrationId\": 653532,\n            }\n        ]\n    },\n    {\n        \"label\": \"warning\",\n        \"alertThreshold\": 25,\n        \"actions\": []\n    }\n]\n\n ```\n\nMetric alert rule trigger actions follow the following structure:\n\n- `type`: The type of trigger action. Valid values are `email`, `slack`, `msteams`, `pagerduty`, `sentry_app`, `sentry_notification`, and `opsgenie`.\n    \n- `targetType`: The type of target the notification will be sent to. Valid values are `specific` (`targetIdentifier` is a direct reference used by the service, like an email address or a Slack channel ID), `user` (`targetIdentifier` is a Sentry user ID), `team` (`targetIdentifier` is a Sentry team ID), and `sentry_app` (`targetIdentifier` is a SentryApp ID).\n    \n- `targetIdentifier`: The ID of the target. This must be an integer for PagerDuty and Sentry apps, and a string for all others. Examples of appropriate values include a Slack channel name (`#my-channel`), a user ID, a team ID, a Sentry app ID, etc.\n    \n- `inputChannelId`: The ID of the Slack channel. This is only used for the Slack action, and can be used as an alternative to providing the `targetIdentifier`.\n    \n- `integrationId`: The integration ID. This is required for every action type excluding `email` and `sentry_app.`\n    \n- `sentryAppId`: The ID of the Sentry app. This is required when `type` is `sentry_app`.\n    \n\n`environment` _(string)_\n\nThe name of the environment to filter by. Defaults to all environments.\n\n`dataset` _(string)_\n\nThe name of the dataset that this query will be executed on. Valid values are `events`, `transactions`, `metrics`, `sessions`, and `generic-metrics`. Defaults to `events`. See [Metric Alert Rule Types](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`queryType` _(integer)_\n\nThe type of query. If no value is provided, `queryType` is set to the default for the specified `dataset.` See [Metric Alert Rule Types](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n- `0` - event.type:error\n    \n- `1` - event.type:transaction\n    \n- `2` - None\n    \n\n`eventTypes` _(array(string))_\n\nList of event types that this alert will be related to. Valid values are `default` (events captured using [Capture Message](https://docs.sentry.io/product/sentry-basics/integrate-backend/capturing-errors/#capture-message)), `error` and `transaction`.\n\n`comparisonDelta` _(integer)_\n\nAn optional int representing the time delta to use as the comparison period, in minutes. Required when using a percentage change threshold (\"x%\" higher or lower compared to `comparisonDelta` minutes ago). A percentage change threshold cannot be used for [Crash Free Session Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-session-rate) or [Crash Free User Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-user-rate).\n\n`resolveThreshold` _(number)_\n\nOptional value that the metric needs to reach to resolve the alert. If no value is provided, this is set automatically based on the lowest severity trigger's `alertThreshold`. For example, if the alert is set to trigger at the warning level when the number of errors is above 50, then the alert would be set to resolve when there are less than 50 errors. If `thresholdType` is `0`, `resolveThreshold` must be greater than the critical threshold, otherwise, it must be less than the critical threshold.\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:write`\n    \n- `alerts:write`\n    \n- `org:admin`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Create Spike Protection Notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"integration_id\": \"default\",\n    \"projects\": [\n        4504843082924032\n    ],\n    \"service_type\": \"sentry_notification\",\n    \"trigger_type\": \"spike-protection\",\n    \"target_identifier\": \"default\",\n    \"target_display\": \"default\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/notifications/actions/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"notifications",
								"actions",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							]
						},
						"description": "# Create a Spike Protection Notification Action\n\n[https://docs.sentry.io/api/alerts/create-a-spike-protection-notification-action/](https://docs.sentry.io/api/alerts/create-a-spike-protection-notification-action/)\n\nPOST/api/0/organizations/{organization_slug}/notifications/actions/\n\nCreates a new Notification Action for Spike Protection.\n\nNotification Actions notify a set of members when an action has been triggered through a notification service such as Slack or Sentry. For example, organization owners and managers can receive an email when a spike occurs.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Body Parameters\n\n`trigger_type` _(string)_REQUIRED\n\nType of the trigger that causes the notification. The only supported trigger right now is: `spike-protection`.\n\n`service_type` _(string)_REQUIRED\n\nService that is used for sending the notification.\n\n- `email`\n- `slack`\n- `sentry_notification`\n- `pagerduty`\n- `opsgenie`\n    \n\n`integration_id` _(integer)_\n\nID of the integration used as the notification service. See [List Integrations](https://docs.sentry.io/api/integrations/list-an-organizations-available-integrations/) to retrieve a full list of integrations.\n\nRequired if **service_type** is `slack`, `pagerduty` or `opsgenie`.\n\n`target_identifier` _(string)_\n\nID of the notification target, like a Slack channel ID.\n\nRequired if **service_type** is `slack` or `opsgenie`.\n\n`target_display` _(string)_\n\nName of the notification target, like a Slack channel name.\n\nRequired if **service_type** is `slack` or `opsgenie`.\n\n`projects` _(array(string))_\n\nList of projects slugs that the Notification Action is created for.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n- `org:read`\n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Delete Project Issue Alert Rule",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/:rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"rules",
								":rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "frontend-javascript"
								},
								{
									"key": "rule_id",
									"value": "14730173"
								}
							]
						},
						"description": "# Delete an Issue Alert Rule\n\n[https://docs.sentry.io/api/alerts/delete-an-issue-alert-rule/](https://docs.sentry.io/api/alerts/delete-an-issue-alert-rule/)\n\n  \nDELETE/api/0/projects/{organization_slug}/{project_slug}/rules/{rule_id}/\n\nDelete a specific issue alert rule.\n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers: specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters: help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions: specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "Delete Spike Protection Notification",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/notifications/actions/:action_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"notifications",
								"actions",
								":action_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "action_id",
									"value": "1878873"
								}
							]
						},
						"description": "# Delete a Spike Protection Notification Action\n\n[https://docs.sentry.io/api/alerts/delete-a-spike-protection-notification-action/](https://docs.sentry.io/api/alerts/delete-a-spike-protection-notification-action/)  \n  \nDELETE/api/0/organizations/{organization_slug}/notifications/actions/{action_id}/\n\nDeletes a Spike Protection Notification Action.\n\nNotification Actions notify a set of members when an action has been triggered through a notification service such as Slack or Sentry. For example, organization owners and managers can receive an email when a spike occurs.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`action_id` _(integer)_REQUIRED\n\nID of the notification action to retrieve\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Delete Metric Alert Rule for Organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/:alert_rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"alert-rules",
								":alert_rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "alert_rule_id",
									"value": "14730173"
								}
							]
						},
						"description": "# Delete a Metric Alert Rule\n\n[https://docs.sentry.io/api/alerts/delete-a-metric-alert-rule/](https://docs.sentry.io/api/alerts/delete-a-metric-alert-rule/)  \n  \nDELETE/api/0/organizations/{organization_slug}/alert-rules/{alert_rule_id}/\n\nDelete a specific metric alert rule.\n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`alert_rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:write`\n    \n- `alerts:write`\n    \n- `org:admin`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "List Project Issue Alert Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"rules",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "frontend-javascript"
								}
							]
						},
						"description": "# List a Project's Issue Alert Rules\n\n[https://docs.sentry.io/api/alerts/list-a-projects-issue-alert-rules/](https://docs.sentry.io/api/alerts/list-a-projects-issue-alert-rules/)\n\n  \nGET/api/0/projects/{organization_slug}/{project_slug}/rules/\n\nReturn a list of active issue alert rules bound to a project.\n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers: specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters: help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions: specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:read`\n    \n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "List Org Metric Alert Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"alert-rules",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							]
						},
						"description": "# List an Organization's Metric Alert Rules\n\n[https://docs.sentry.io/api/alerts/list-an-organizations-metric-alert-rules/](https://docs.sentry.io/api/alerts/list-an-organizations-metric-alert-rules/)\n\nGET/api/0/organizations/{organization_slug}/alert-rules/\n\nReturn a list of active metric alert rules bound to an organization.\n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:read`\n    \n- `alerts:read`\n    \n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "List Spike Protection Notifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/notifications/actions/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"notifications",
								"actions",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							]
						},
						"description": "# List Spike Protection Notifications\n\n[https://docs.sentry.io/api/alerts/list-spike-protection-notifications/](https://docs.sentry.io/api/alerts/list-spike-protection-notifications/)\n\n  \nGET/api/0/organizations/{organization_slug}/notifications/actions/\n\nReturns all Spike Protection Notification Actions for an organization.\n\nNotification Actions notify a set of members when an action has been triggered through a notification service such as Slack or Sentry. For example, organization owners and managers can receive an email when a spike occurs.\n\nYou can use either the `project` or `projectSlug` query parameter to filter for certain projects. Note that if both are present, `projectSlug` takes priority.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`project` _(array(integer))_\n\nThe IDs of projects to filter by. `-1` means all available projects. For example the following are valid parameters:\n\n- `/?project=1234&project=56789`\n    \n- `/?project=-1`\n    \n\n`project_slug` _(array(string))_\n\nThe project slugs to filter by. Use `$all` to include all available projects. For example the following are valid parameters:\n\n- `/?projectSlug=$all`\n    \n- `/?projectSlug=android&projectSlug=javascript-react`\n    \n\n`triggerType` _(string)_\n\nType of the trigger that causes the notification. The only supported value right now is: `spike-protection`\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Retrieve Project Issue Alert Rule",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/:rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"rules",
								":rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "frontend-javascript"
								},
								{
									"key": "rule_id",
									"value": "14730173"
								}
							]
						},
						"description": "# Retrieve an Issue Alert Rule for a Project\n\n[https://docs.sentry.io/api/alerts/retrieve-an-issue-alert-rule-for-a-project/](https://docs.sentry.io/api/alerts/retrieve-an-issue-alert-rule-for-a-project/)\n\nGET/api/0/projects/{organization_slug}/{project_slug}/rules/{rule_id}/\n\nReturn details on an individual issue alert rule.\n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers - specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters - help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions - specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:read`\n    \n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "Retrieve Metric Alert Rule for Organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/:alert_rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"alert-rules",
								":alert_rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "alert_rule_id",
									"value": "181459"
								}
							]
						},
						"description": "# Retrieve a Metric Alert Rule for an Organization\n\n[https://docs.sentry.io/api/alerts/retrieve-a-metric-alert-rule-for-an-organization/](https://docs.sentry.io/api/alerts/retrieve-a-metric-alert-rule-for-an-organization/)\n\nGET/api/0/organizations/{organization_slug}/alert-rules/{alert_rule_id}/\n\nReturn details on an individual metric alert rule.\n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`alert_rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:read`\n    \n- `alerts:read`\n    \n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Retrieve Spike Protection Notification",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/notifications/actions/:action_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"notifications",
								"actions",
								":action_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "action_id",
									"value": "1878873"
								}
							]
						},
						"description": "# Retrieve a Spike Protection Notification Action\n\n[https://docs.sentry.io/api/alerts/retrieve-a-spike-protection-notification-action/](https://docs.sentry.io/api/alerts/retrieve-a-spike-protection-notification-action/)\n\nGET/api/0/organizations/{organization_slug}/notifications/actions/{action_id}/\n\nReturns a serialized Spike Protection Notification Action object.\n\nNotification Actions notify a set of members when an action has been triggered through a notification service such as Slack or Sentry. For example, organization owners and managers can receive an email when a spike occurs.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`action_id` _(integer)_REQUIRED\n\nID of the notification action to retrieve\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Update Org Metric Alert Rule",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Release Version Alert\",\n    \"status\": 0,\n    \"queryType\": 0,\n    \"dataset\": \"events\",\n    \"query\": \"release.version:>=23.2.2 AND release.version:<=23.7.1\",\n    \"aggregate\": \"count()\",\n    \"thresholdType\": 0,\n    \"resolveThreshold\": 300.0,s\n    \"timeWindow\": 60.0,\n    \"environment\": null,\n    \"resolution\": 1.0,\n    \"thresholdPeriod\": 1,\n    \"triggers\": [\n        {\n            \"id\": \"300559\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"critical\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 500.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.979874Z\",\n            \"actions\": [\n                {\n                    \"id\": \"288803\",\n                    \"alertRuleTriggerId\": \"300559\",\n                    \"type\": \"email\",\n                    \"targetType\": \"user\",\n                    \"targetIdentifier\": \"2090953\",\n                    \"inputChannelId\": null,\n                    \"integrationId\": null,\n                    \"sentryAppId\": null,\n                    \"dateCreated\": \"2023-10-12T18:48:31.987547Z\",\n                    \"desc\": \"Send a notification to dirk.nielsen@sentry.io\"\n                }\n            ]\n        },\n        {\n            \"id\": \"300560\",\n            \"alertRuleId\": \"181459\",\n            \"label\": \"warning\",\n            \"thresholdType\": 0,\n            \"alertThreshold\": 400.0,\n            \"resolveThreshold\": 300.0,\n            \"dateCreated\": \"2023-10-12T18:48:31.993283Z\",\n            \"actions\": []\n        }\n    ],\n    \"projects\": [\n        \"backend-aspnetcore\"\n    ],\n    \"includeAllProjects\": false,\n    \"owner\": \"team:1168178\",\n    \"originalAlertRuleId\": null,\n    \"comparisonDelta\": null,\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"excludedProjects\": [],\n    \"eventTypes\": [\n        \"error\"\n    ],\n    \"snooze\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/alert-rules/:alert_rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"alert-rules",
								":alert_rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "alert_rule_id",
									"value": ""
								}
							]
						},
						"description": "# Update a Metric Alert Rule\n\n[https://docs.sentry.io/api/alerts/update-a-metric-alert-rule/](https://docs.sentry.io/api/alerts/update-a-metric-alert-rule/)\n\nPUT/api/0/organizations/{organization_slug}/alert-rules/{alert_rule_id}/\n\nUpdates a metric alert rule. See **Metric Alert Rule Types** under [Create a Metric Alert Rule for an Organization](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) to see valid request body configurations for different types of metric alert rule types.\n\n> &lt;p &gt;Warning: Calling this endpoint fully overwrites the specified metric alert.&lt;/p&gt; \n  \n\nA metric alert rule is a configuration that defines the conditions for triggering an alert. It specifies the metric type, function, time interval, and threshold values that determine when an alert should be triggered. Metric alert rules are used to monitor and notify you when certain metrics, like error count, latency, or failure rate, cross a predefined threshold. These rules help you proactively identify and address issues in your project.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`alert_rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule.\n\n`aggregate` _(string)_REQUIRED\n\nA string representing the aggregate function used in this alert rule. Valid aggregate functions are `count`, `count_unique`, `percentage`, `avg`, `apdex`, `failure_rate`, `p50`, `p75`, `p95`, `p99`, `p100`, and `percentile`. See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`timeWindow` _(integer)_REQUIRED\n\nThe time period to aggregate over.\n\n- `1` - 1 minute\n    \n- `5` - 5 minutes\n    \n- `10` - 10 minutes\n    \n- `15` - 15 minutes\n    \n- `30` - 30 minutes\n    \n- `60` - 1 hour\n    \n- `120` - 2 hours\n    \n- `240` - 4 hours\n    \n- `1440` - 24 hours\n    \n\n`projects` _(array(string))_REQUIRED\n\nThe names of the projects to filter by.\n\n`query` _(string)_REQUIRED\n\nAn event search query to subscribe to and monitor for alerts. For example, to filter transactions so that only those with status code 400 are included, you could use `\"query\": \"http.status_code:400\"`. Use an empty string for no filter.\n\n`thresholdType` _(integer)_REQUIRED\n\nThe comparison operator for the critical and warning thresholds. The comparison operator for the resolved threshold is automatically set to the opposite operator. When a percentage change threshold is used, `0` is equivalent to \"Higher than\" and `1` is equivalent to \"Lower than\".\n\n- `0` - Above\n    \n- `1` - Below\n    \n\n`triggers` _(array(undefined))_REQUIRED\n\nA list of triggers, where each trigger is an object with the following fields:\n\n- `label`: One of `critical` or `warning`. A `critical` trigger is always required.\n    \n- `alertThreshold`: The value that the subscription needs to reach to trigger the alert rule.\n    \n- `actions`: A list of actions that take place when the threshold is met. Set as an empty list if no actions are to take place.\n    \n\nJSONCopied\n\n```\ntriggers: [\n    {\n        \"label\": \"critical\",\n        \"alertThreshold\": 100,\n        \"actions\": [\n            {\n                \"type\": \"email\",\n                \"targetType\": \"user\",\n                \"targetIdentifier\": \"23489853\",\n                \"inputChannelId\": None\n                \"integrationId\": None,\n                \"sentryAppId\": None\n            }\n        ]\n    },\n    {\n        \"label\": \"warning\",\n        \"alertThreshold\": 75,\n        \"actions\": []\n    }\n]\n\n ```\n\nMetric alert rule trigger actions follow the following structure:\n\n- `type`: The type of trigger action. Valid values are `email`, `slack`, `msteams`, `pagerduty`, `sentry_app`, `sentry_notification`, and `opsgenie`.\n    \n- `targetType`: The type of target the notification will be sent to. Valid values are `specific`, `user`, `team`, and `sentry_app`.\n    \n- `targetIdentifier`: The ID of the target. This must be an integer for PagerDuty and Sentry apps, and a string for all others. Examples of appropriate values include a Slack channel name (`#my-channel`), a user ID, a team ID, a Sentry app ID, etc.\n    \n- `inputChannelId`: The ID of the Slack channel. This is only used for the Slack action, and can be used as an alternative to providing the `targetIdentifier`.\n    \n- `integrationId`: The integration ID. This is required for every action type except `email` and `sentry_app.`\n    \n- `sentryAppId`: The ID of the Sentry app. This is required when `type` is `sentry_app`.\n    \n\n`environment` _(string)_\n\nThe name of the environment to filter by. Defaults to all environments.\n\n`dataset` _(string)_\n\nThe name of the dataset that this query will be executed on. Valid values are `events`, `transactions`, `metrics`, `sessions`, and `generic-metrics`. Defaults to `events`. See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n`queryType` _(integer)_\n\nThe type of query. If no value is provided, `queryType` is set to the default for the specified `dataset.` See **Metric Alert Rule Types** under [Create a Metric Alert Rule](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#metric-alert-rule-types) for valid configurations.\n\n- `0` - event.type:error\n    \n- `1` - event.type:transaction\n    \n- `2` - None\n    \n\n`eventTypes` _(array(string))_\n\nList of event types that this alert will be related to. Valid values are `default` (events captured using [Capture Message](https://docs.sentry.io/product/sentry-basics/integrate-backend/capturing-errors/#capture-message)), `error` and `transaction`.\n\n`comparisonDelta` _(integer)_\n\nAn optional int representing the time delta to use as the comparison period, in minutes. Required when using a percentage change threshold (\"x%\" higher or lower compared to `comparisonDelta` minutes ago). A percentage change threshold cannot be used for [Crash Free Session Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-session-rate) or [Crash Free User Rate](https://docs.sentry.io/api/alerts/create-a-metric-alert-rule-for-an-organization/#crash-free-user-rate).\n\n`resolveThreshold` _(number)_\n\nOptional value that the metric needs to reach to resolve the alert. If no value is provided, this is set automatically based on the lowest severity trigger's `alertThreshold`. For example, if the alert is set to trigger at the warning level when the number of errors is above 50, then the alert would be set to resolve when there are less than 50 errors. If `thresholdType` is `0`, `resolveThreshold` must be greater than the critical threshold. Otherwise, it must be less than the critical threshold.\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alert_rule:write`\n    \n- `alerts:write`\n    \n- `org:admin`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Create Spike Protection Notification Copy",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"integration_id\": \"default\",\n    \"projects\": [\n        4504843082924032\n    ],\n    \"service_type\": \"sentry_notification\",\n    \"trigger_type\": \"spike-protection\",\n    \"target_identifier\": \"default\",\n    \"target_display\": \"default\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/notifications/actions/:action_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"notifications",
								"actions",
								":action_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "action_id",
									"value": ""
								}
							]
						},
						"description": "# Update a Spike Protection Notification Action\n\n[https://docs.sentry.io/api/alerts/update-a-spike-protection-notification-action/](https://docs.sentry.io/api/alerts/update-a-spike-protection-notification-action/)\n\nPUT/api/0/organizations/{organization_slug}/notifications/actions/{action_id}/\n\nUpdates a Spike Protection Notification Action.\n\nNotification Actions notify a set of members when an action has been triggered through a notification service such as Slack or Sentry. For example, organization owners and managers can receive an email when a spike occurs.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`action_id` _(integer)_REQUIRED\n\nID of the notification action to retrieve\n\n### Body Parameters\n\n`trigger_type` _(string)_REQUIRED\n\nType of the trigger that causes the notification. The only supported trigger right now is: `spike-protection`.\n\n`service_type` _(string)_REQUIRED\n\nService that is used for sending the notification.\n\n- `email`\n    \n- `slack`\n    \n- `sentry_notification`\n    \n- `pagerduty`\n    \n- `opsgenie`\n    \n\n`integration_id` _(integer)_\n\nID of the integration used as the notification service. See [List Integrations](https://docs.sentry.io/api/integrations/list-an-organizations-available-integrations/) to retrieve a full list of integrations.\n\nRequired if **service_type** is `slack`, `pagerduty` or `opsgenie`.\n\n`target_identifier` _(string)_\n\nID of the notification target, like a Slack channel ID.\n\nRequired if **service_type** is `slack` or `opsgenie`.\n\n`target_display` _(string)_\n\nName of the notification target, like a Slack channel name.\n\nRequired if **service_type** is `slack` or `opsgenie`.\n\n`projects` _(array(string))_\n\nList of projects slugs that the Notification Action is created for.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`\n    \n\n```\ncurl https://sentry.io/api/0/organizations/{organization_slug}/notifications/actions/{action_id}/ \\\n -H &#x27;Authorization: Bearer <auth_token>&#x27; \\\n -X PUT \\\n -H 'Content-Type: application/json' \\\n -d '{}'\n\n ```\n\nRESPONSESCHEMA202400\n\n```\n{\n  \"id\": \"836501735\",\n  \"organizationId\": \"62848264\",\n  \"serviceType\": \"sentry_notification\",\n  \"targetDisplay\": \"default\",\n  \"targetIdentifier\": \"default\",\n  \"targetType\": \"specific\",\n  \"triggerType\": \"spike-protection\",\n  \"projects\": [\n    4505321021243392\n  ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Update Project Issue Alert Rule",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conditions\": [\n        {\n            \"id\": \"sentry.rules.conditions.first_seen_event.FirstSeenEventCondition\",\n            \"label\": \"label...\",\n            \"name\": \"A new issue is created\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"match\": \"co\",\n            \"id\": \"sentry.rules.filters.tagged_event.TaggedEventFilter\",\n            \"key\": \"release\",\n            \"value\": \"23.10.1\",\n            \"name\": \"The event's tags match release contains 23.10.1\"\n        }\n    ],\n    \"actions\": [\n        {\n            \"targetType\": \"Member\",\n            \"fallthroughType\": \"ActiveMembers\",\n            \"id\": \"sentry.mail.actions.NotifyEmailAction\",\n            \"targetIdentifier\": 2090953,\n            \"name\": \"Send a notification to Member\"\n        }\n    ],\n    \"actionMatch\": \"any\",\n    \"filterMatch\": \"all\",\n    \"frequency\": 1440,\n    \"name\": \"Dirk JS Issue via API\",\n    \"owner\": \"team:1168178\",\n    \"createdBy\": {\n        \"id\": 2090953,\n        \"name\": \"dirk.nielsen@sentry.io\",\n        \"email\": \"dirk.nielsen@sentry.io\"\n    },\n    \"environment\": \"production\",\n    \"status\": \"active\",\n    \"snooze\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/rules/:rule_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"rules",
								":rule_id",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "frontend-javascript"
								},
								{
									"key": "rule_id",
									"value": "14730220"
								}
							]
						},
						"description": "# Update an Issue Alert Rule\n\n[https://docs.sentry.io/api/alerts/update-an-issue-alert-rule/](https://docs.sentry.io/api/alerts/update-an-issue-alert-rule/)\n\nPUT/api/0/projects/{organization_slug}/{project_slug}/rules/{rule_id}/\n\nUpdates an issue alert rule.\n\n> &lt;p &gt;Warning: Calling this endpoint fully overwrites the specified issue alert.&lt;/p&gt; \n  \n\nAn issue alert rule triggers whenever a new event is received for any issue in a project that matches the specified alert conditions. These conditions can include a resolved issue re-appearing or an issue affecting many users. Alert conditions have three parts:\n\n- Triggers - specify what type of activity you'd like monitored or when an alert should be triggered.\n    \n- Filters - help control noise by triggering an alert only if the issue matches the specified criteria.\n    \n- Actions - specify what should happen when the trigger conditions are met and the filters match.\n    \n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`rule_id` _(integer)_REQUIRED\n\nThe ID of the rule you'd like to query.\n\n### Body Parameters\n\n`name` _(string)_REQUIRED\n\nThe name for the rule.\n\n`actionMatch` _(string)_REQUIRED\n\nA string determining which of the conditions need to be true before any filters are evaluated.\n\n- `all` - All conditions must evaluate to true.\n    \n- `any` - At least one of the conditions must evaluate to true.\n    \n- `none` - All conditions must evaluate to false.\n    \n\n`conditions` _(array(object))_REQUIRED\n\nA list of triggers that determine when the rule fires. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid conditions.\n\n`actions` _(array(object))_REQUIRED\n\nA list of actions that take place when all required conditions and filters for the rule are met. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid actions.\n\n`frequency` _(integer)_REQUIRED\n\nHow often to perform the actions once for an issue, in minutes. The valid range is `5` to `43200`.\n\n`environment` _(string)_\n\nThe name of the environment to filter by.\n\n`filterMatch` _(string)_\n\nA string determining which filters need to be true before any actions take place.\n\n- `all` - All filters must evaluate to true.\n    \n- `any` - At least one of the filters must evaluate to true.\n    \n- `none` - All filters must evaluate to false.\n    \n\n`filters` _(array(object))_\n\nA list of filters that determine if a rule fires after the necessary conditions have been met. See [Create an Issue Alert Rule](https://docs.sentry.io/api/alerts/create-an-issue-alert-rule-for-a-project/) for valid filters.\n\n`owner` _(string)_\n\nThe ID of the team or user that owns the rule.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `alerts:write`\n    \n- `project:admin`\n    \n- `project:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelopes",
			"item": [
				{
					"name": "Create Sentry Transaction",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Using UUID to construct 32-byte Event and Trace IDs",
									"var uuid = require(\"uuid\");",
									"",
									"// Function to create 16 byte random IDs for Spans",
									"const genRanHex = (size) =>",
									"  [...Array(size)]",
									"    .map(() => Math.floor(Math.random() * 16).toString(16))",
									"    .join(\"\");",
									"",
									"// Define local date object to work from",
									"const servertime = new Date();",
									"",
									"// Fetch locally stored Postman variables",
									"PublicKey = postman.getEnvironmentVariable(\"public_key\")",
									"",
									"// Define Transaction Timespans",
									"const TxnTime = {",
									"  sentat: servertime.toISOString(),",
									"  totaltime: {",
									"    start: new Date(servertime - 12000).toISOString(),",
									"    end: new Date(servertime - 0).toISOString(),",
									"  },",
									"  span01: {",
									"    start: new Date(servertime - 12000).toISOString(),",
									"    end: new Date(servertime - 8000).toISOString(),",
									"  },",
									"  span02: {",
									"    start: new Date(servertime - 8000).toISOString(),",
									"    end: new Date(servertime - 4000).toISOString(),",
									"  },",
									"  span03: {",
									"    start: new Date(servertime - 4000).toISOString(),",
									"    end: new Date(servertime - 0).toISOString(),",
									"  },",
									"  breadcrumb01: new Date(servertime - 0500).toISOString(),",
									"  breadcrumb02: new Date(servertime - 1000).toISOString(),",
									"  breadcrumb03: new Date(servertime - 9500).toISOString(),",
									"};",
									"",
									"// Define Unique IDs",
									"const TxnIDs = {",
									"  eventid: uuid.v4().replaceAll(\"-\", \"\"),",
									"  traceid: uuid.v4().replaceAll(\"-\", \"\"),",
									"  parentspan: genRanHex(16),",
									"  childspan01: genRanHex(16),",
									"  childspan02: genRanHex(16),",
									"  childspan03: genRanHex(16),",
									"};",
									"",
									"// Construct Header",
									"const TxnHeader = {",
									"  event_id: TxnIDs.eventid,",
									"  sent_at: TxnTime.sentat,",
									"  sdk: { name: \"Postman\", version: \"9.24.8\" },",
									"  trace: {",
									"    environment: \"production\",",
									"    release: \"postman@9.24.8\",",
									"    public_key: PublicKey,",
									"    trace_id: TxnIDs.traceid,",
									"    sample_rate: \"1\",",
									"  },",
									"};",
									"",
									"// Construct Transaction Item",
									"const TxnItem = {",
									"  type: \"transaction\",",
									"  sample_rates: [{ id: \"client_rate\", rate: 1 }],",
									"};",
									"",
									"// Construct Transaction Payload",
									"const TxnPayload = {",
									"  contexts: {",
									"    state: {",
									"      state: {",
									"        type: \"None\",",
									"        value: \"State\",",
									"      },",
									"    },",
									"    trace: {",
									"      op: \"request\",",
									"      span_id: TxnIDs.parentspan,",
									"      tags: {",
									"        \"routing.instrumentation\": \"postman-router\",",
									"        effectiveConnectionType: \"5G\",",
									"        deviceMemory: \"32 GB\",",
									"        hardwareConcurrency: \"1\",",
									"      },",
									"      trace_id: TxnIDs.traceid,",
									"      description: \"Postman Performance Txn Testing\",",
									"      status: \"ok\",",
									"    },",
									"  },",
									"  spans: [",
									"    {",
									"      description: \"Postman PreRequest\",",
									"      op: \"ui.postman.prerequest\",",
									"      parent_span_id: TxnIDs.parentspan,",
									"      span_id: TxnIDs.childspan01,",
									"      start_timestamp: TxnTime.span01.start,",
									"      timestamp: TxnTime.span01.end,",
									"      trace_id: TxnIDs.traceid,",
									"    },",
									"    {",
									"      description: \"Postman Request\",",
									"      op: \"ui.postman.request\",",
									"      parent_span_id: TxnIDs.parentspan,",
									"      span_id: TxnIDs.childspan02,",
									"      start_timestamp: TxnTime.span02.start,",
									"      timestamp: TxnTime.span02.end,",
									"      trace_id: TxnIDs.traceid,",
									"    },",
									"    {",
									"      description: \"Postman Response\",",
									"      op: \"ui.postman.response\",",
									"      parent_span_id: TxnIDs.parentspan,",
									"      span_id: TxnIDs.childspan03,",
									"      start_timestamp: TxnTime.span03.start,",
									"      timestamp: TxnTime.span03.end,",
									"      trace_id: TxnIDs.traceid,",
									"    },",
									"  ],",
									"  start_timestamp: TxnTime.totaltime.start,",
									"  timestamp: TxnTime.totaltime.end,",
									"  tags: {",
									"    customerType: \"basic\",",
									"    backendType: \"nodejs\",",
									"    effectiveConnectionType: \"Wifi\",",
									"    deviceMemory: \"32 GB\",",
									"    hardwareConcurrency: \"10\",",
									"  },",
									"  transaction: `Postman Txn ${servertime}`,",
									"  type: \"transaction\",",
									"  transaction_info: {",
									"    source: \"custom\",",
									"  },",
									"  platform: \"javascript\",",
									"  event_id:                                                     ,",
									"  environment: \"development\",",
									"  release: \"Postman@22.8.4\",",
									"  user: {",
									"    email: \"dirk@quickstark.com\",",
									"  },",
									"  breadcrumbs: [",
									"    {",
									"      timestamp: TxnTime.breadcrumb01,",
									"      category: \"postman.prerequest\",",
									"      data: {",
									"        type: \"@postman.Pre-request Script\",",
									"      },",
									"      type: \"info\",",
									"    },",
									"    {",
									"      timestamp: TxnTime.breadcrumb02,",
									"      category: \"postman.request\",",
									"      data: {",
									"        type: \"@postman.Request\",",
									"        arguments: [\"header\", \"item\", \"payload\"],",
									"        logger: \"console\",",
									"      },",
									"      level: \"log\",",
									"      message: \"Sending a Postman Request\",",
									"    },",
									"    {",
									"      timestamp: TxnTime.breadcrumb03,",
									"      category: \"postman.response\",",
									"      data: {",
									"        type: \"@postman.Response\",",
									"      },",
									"      type: \"info\",",
									"      message: \"Received Response 200\",",
									"    },",
									"  ],",
									"  request: {",
									"    url: `https://application-monitoring-react-dot-sales-engineering-sf.appspot.com/`,",
									"    headers: {",
									"      \"User-Agent\": `Chrome/104.0.0.0`,",
									"    },",
									"  },",
									"};",
									"",
									"// Log our Objects",
									"console.log(`--- Sending Transaction ---`)",
									"console.log(TxnHeader);",
									"console.log(TxnItem);",
									"console.log(TxnPayload);",
									"",
									"// Set the Environment Variables",
									"postman.setEnvironmentVariable(\"txnids\", JSON.stringify(TxnIDs));",
									"postman.setEnvironmentVariable(\"txnheader\", JSON.stringify(TxnHeader));",
									"postman.setEnvironmentVariable(\"txnitem\", JSON.stringify(TxnItem));",
									"postman.setEnvironmentVariable(\"txnpayload\", JSON.stringify(TxnPayload));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// const jsonResponse = pm.response.json()",
									"// console.log(pm.response.json())",
									"// pm.environment.set('txnresponseid', jsonResponse.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{txnheader}}\n{{txnitem}}\n{{txnpayload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sentry_url}}{{project_id}}/envelope/?sentry_key={{public_key}}",
							"host": [
								"{{sentry_url}}{{project_id}}"
							],
							"path": [
								"envelope",
								""
							],
							"query": [
								{
									"key": "sentry_key",
									"value": "{{public_key}}"
								}
							]
						},
						"description": "URL formatted for Local Relay instance (useful for testing / development)"
					},
					"response": []
				},
				{
					"name": "Create Sentry Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Using UUID to construct 32-byte Event and Trace IDs",
									"var uuid = require(\"uuid\");",
									"",
									"// Function to create 16 byte random IDs for Spans",
									"const genRanHex = (size) =>",
									"  [...Array(size)]",
									"    .map(() => Math.floor(Math.random() * 16).toString(16))",
									"    .join(\"\");",
									"",
									"// Define local date object to work from",
									"const servertime = new Date();",
									"",
									"// Fetch locally stored Postman Transaction variables",
									"// We need these to correlate the transaction and error events",
									"TransactionIDs = JSON.parse(postman.getEnvironmentVariable(\"txnids\"))",
									"",
									"// Define Transaction Timespans",
									"const ErrorTime = {",
									"  sentat: servertime.toISOString(),",
									"};",
									"",
									"// Define Unique IDs",
									"const ErrorID = {",
									" errorID : uuid.v4().replaceAll(\"-\", \"\")",
									"}",
									"",
									"// Construct Header",
									"const ErrorHeader = {",
									"  event_id: ErrorID.errorID,",
									"  sent_at: ErrorTime.sentat,",
									"  sdk: { name: \"Postman\", version: \"9.24.8\" }",
									"};",
									"",
									"// Construct Error Item",
									"const ErrorItem = {",
									"  type: \"event\"",
									"};",
									"",
									"",
									"// Construct Error Payload",
									"const ErrorPayload = {",
									"  exception: {",
									"    values: [",
									"      {",
									"        type: \"Exception\",",
									"        value: \"Postman Trace is BAD!\",",
									"        mechanism: {",
									"          type: \"generic\",",
									"          handled: false,",
									"        },",
									"      },",
									"      {",
									"        type: \"ValueError\",",
									"        value: \"Something went wrong, please help!\",",
									"        stacktrace: {",
									"          frames: [",
									"            {",
									"              colno: 001,",
									"              filename: \"https://postman.create_sentry_request.js\",",
									"              function: \"u\",",
									"              in_app: true,",
									"              lineno: 1,",
									"            },",
									"            {",
									"              colno: 010,",
									"              filename: \"https://postman.create_sentry_request_pre-req.js\",",
									"              function: \"r\",",
									"              in_app: true,",
									"              lineno: 2,",
									"            },",
									"            {",
									"              colno: 200,",
									"              filename: \"https://postman.create_sentry_response.js\",",
									"              function: \"Generator.next\",",
									"              in_app: true,",
									"              lineno: 3,",
									"            },",
									"          ],",
									"        },",
									"        mechanism: {",
									"          type: \"request\",",
									"          description:",
									"            \"This error originated either by throwing inside of a Request ...\",",
									"          handled: false,",
									"          data: { polyfill: \"redbird\" },",
									"        },",
									"      },",
									"      {",
									"        type: \"Exception\",",
									"        value: `Something went wrong with ${TransactionIDs.eventid}`,",
									"        mechanism: {",
									"          type: \"response\",",
									"          description: \"This error threw inside of a Response ...\",",
									"          handled: false,",
									"          data: { polyfill: \"bluebird\" },",
									"        },",
									"      },",
									"    ],",
									"  },",
									"  tags: {",
									"    correlated: TransactionIDs.eventid,",
									"    browser: \"Postman 9.24.0\",",
									"    client_os: \"OSX\",",
									"    \"client_os.name\": \"Mac OS\",",
									"    \"customer-type\": \"small-plan\",",
									"  },",
									"  contexts: {",
									"    browser: {",
									"      name: \"Postman\",",
									"      version: \"9.24.0\",",
									"      type: \"browser\",",
									"    },",
									"    os: {",
									"      name: \"OSX\",",
									"      version: \"15\",",
									"      type: \"os\",",
									"    },",
									"    trace: {",
									"      trace_id: TransactionIDs.traceid,",
									"      span_id: TransactionIDs.parentspan,",
									"      status: \"cancelled\",",
									"      type: \"trace\",",
									"    },",
									"  },",
									"  user: {",
									"    email: \"dirk@quickstark.com\",",
									"  },",
									"};",
									"",
									"  ",
									"",
									"// Log our Objects",
									"console.log(`--- Sending Error ---`)",
									"console.log(ErrorHeader);",
									"console.log(ErrorItem);",
									"console.log(ErrorPayload);",
									"",
									"postman.setEnvironmentVariable(\"errorheader\", JSON.stringify(ErrorHeader));",
									"postman.setEnvironmentVariable(\"erroritem\", JSON.stringify(ErrorItem));",
									"postman.setEnvironmentVariable(\"errorpayload\", JSON.stringify(ErrorPayload));"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{errorheader}}\n{{erroritem}}\n{{errorpayload}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sentry_url}}{{project_id}}/envelope/?sentry_key={{public_key}}",
							"host": [
								"{{sentry_url}}{{project_id}}"
							],
							"path": [
								"envelope",
								""
							],
							"query": [
								{
									"key": "sentry_key",
									"value": "{{public_key}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Discover",
			"item": [
				{
					"name": "Query Discover Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/events/?field=project&field=count_unique(transaction)&field=environment",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"events",
								""
							],
							"query": [
								{
									"key": "field",
									"value": "transaction",
									"disabled": true
								},
								{
									"key": "field",
									"value": "title",
									"disabled": true
								},
								{
									"key": "field",
									"value": "project"
								},
								{
									"key": "field",
									"value": "count()",
									"disabled": true
								},
								{
									"key": "field",
									"value": "count_if(transaction.duration,greater,300)",
									"disabled": true
								},
								{
									"key": "field",
									"value": "count_unique(transaction)"
								},
								{
									"key": "field",
									"value": "user.display",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "count()",
									"disabled": true
								},
								{
									"key": "query",
									"value": "(event.type:\"transaction\")",
									"disabled": true
								},
								{
									"key": "field",
									"value": "user.id",
									"disabled": true
								},
								{
									"key": "field",
									"value": "browser",
									"disabled": true
								},
								{
									"key": "field",
									"value": "environment"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/discover/query-discover-events-in-table-format/](https://docs.sentry.io/api/discover/query-discover-events-in-table-format/)\n\nRetrieves discover (also known as events) data for a given organization.\n\n**Note**: This endpoint is intended to get a table of results, and is not for doing a full export of data sent to Sentry.\n\nThe `field` query parameter determines what fields will be selected in the `data` and `meta` keys of the endpoint response.\n\n*   The `data` key contains a list of results row by row that match the `query` made\n*   The `meta` key contains information about the response, including the unit or type of the fields requested\n    \n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`end` *(string)*\n\nThe end of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`\n\n`environment` *(array(string))*\n\nThe name of environments to filter by.\n\n`project` *(array(integer))*\n\nThe ids of projects to filter by. `-1` means all available projects. If this parameter is omitted, the request will default to using 'My Projects'\n\n`start` *(string)*\n\nThe start of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`\n\n`statsPeriod` *(string)*\n\nThe period of time for the query, will override the start & end parameters, a number followed by one of:\n\n*   `d` for days\n*   `h` for hours\n*   `m` for minutes\n*   `s` for seconds\n*   `w` for weeks\n    \n\nFor example `24h`, to mean query data starting from 24 hours ago to now.\n\n`field` *(array(string))*REQUIRED\n\nThe fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types:\n\n*   A built-in key field. See possible fields in the [properties table](https://docs.sentry.io/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property\n    *   example: `field=transaction`\n*   A tag. Tags should use the `tag[]` formatting to avoid ambiguity with any fields\n    *   example: `field=tag[isEnterprise]`\n*   A function which will be in the format of `function_name(parameters,...)`. See possible functions in the [query builder documentation](https://docs.sentry.io/product/discover-queries/query-builder/#stacking-functions)\n    *   when a function is included, Discover will group by any tags or fields\n    *   example: `field=count_if(transaction.duration,greater,300)`\n*   An equation when prefixed with `equation|`. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/)\n    *   example: `field=equation|count_if(transaction.duration,greater,300) / count() * 100`\n\n`per_page` *(integer)*\n\nLimit the number of rows to return in the result. Default and maximum allowed is 100.\n\n`query` *(string)*\n\nThe search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/)\n\nexample: `query=(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)`\n\n`sort` *(string)*\n\nWhat to order the results of the query by. Must be something in the `field` list, excluding equations.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org:admin`\n*   `org:read`\n*   `org:write`"
					},
					"response": []
				}
			],
			"description": "# Discover & Performance\n\nDiscover and Performance allow you to slice and dice your Error and Transaction events"
		},
		{
			"name": "Events & Issues",
			"item": [
				{
					"name": "Bulk Mutate List of Issues",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"assignedTo\":\"dirk@quickstark.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/issues/?id=3541461004&id=3541376859",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"issues",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "3541461004"
								},
								{
									"key": "id",
									"value": "3541376859"
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/bulk-mutate-a-list-of-issues/](https://docs.sentry.io/api/events/bulk-mutate-a-list-of-issues/)\n\nBulk mutate various attributes on issues. The list of issues to modify is given through the `id` query parameter. It is repeated for each issue that should be modified.\n\n*   For non-status updates, the `id` query parameter is required.\n*   For status updates, the `id` query parameter may be omitted for a batch \"update all\" query.\n*   An optional `status` query parameter may be used to restrict mutations to only events with the given status.\n    \n\nThe following attributes can be modified and are supplied as JSON object in the body:\n\nIf any ids are out of scope this operation will succeed without any data mutation.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the issues belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the issues belong to.\n\n### Query Parameters:\n\n`id` *(integer)*\n\nA list of IDs of the issues to be mutated. This parameter shall be repeated for each issue. It is optional only if a status is mutated in which case an implicit update all is assumed.\n\n`status` *(string)*\n\nOptionally limits the query to issues of the specified status. Valid values are `\"resolved\"`, `\"unresolved\"`, and `\"ignored\"`.\n\n### Body Parameters\n\n`status` *(string)*\n\nThe new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`.\n\n`statusDetails` *(object)*\n\nAdditional details about the resolution. Valid values are `\"inRelease\"`, `\"inNextRelease\"`, `\"inCommit\"`, `\"ignoreDuration\"`, `\"ignoreCount\"`, `\"ignoreWindow\"`, `\"ignoreUserCount\"`, and `\"ignoreUserWindow\"`.\n\n`ignoreDuration` *(integer)*\n\nThe number of minutes to ignore this issue.\n\n`isPublic` *(boolean)*\n\nSets the issue to public or private.\n\n`merge` *(boolean)*\n\nAllows to merge or unmerge different issues.\n\n`assignedTo` *(string)*\n\nThe actor id (or username) of the user or team that should be assigned to this issue.\n\n`hasSeen` *(boolean)*\n\nIn case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event.\n\n`isBookmarked` *(boolean)*\n\nIn case this API call is invoked with a user context this allows changing of the bookmark flag.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Bulk Remove List of Issues",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/issues/?id=3495986828&id=3496002081",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"issues",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "3495986828"
								},
								{
									"key": "id",
									"value": "3496002081"
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/bulk-remove-a-list-of-issues/](https://docs.sentry.io/api/events/bulk-remove-a-list-of-issues/)\n\nPermanently remove the given issues. The list of issues to modify is given through the `id` query parameter. It is repeated for each issue that should be removed.\n\nOnly queries by 'id' are accepted.\n\nIf any ids are out of scope this operation will succeed without any data mutation.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the issues belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the issues belong to.\n\n### Query Parameters:\n\n`id` *(integer)*\n\nA list of IDs of the issues to be removed. This parameter shall be repeated for each issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:admin`"
					},
					"response": []
				},
				{
					"name": "List Project Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/events/?",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"events",
								""
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "cursor",
									"value": "0:200:0",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "android"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/list-a-projects-events/](https://docs.sentry.io/api/events/list-a-projects-events/)\n\nReturn a list of events bound to a project.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the groups belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the groups belong to.\n\n### Query Parameters:\n\n`full` *(boolean)*\n\nIf this is set to true then the event payload will include the full event body, including the stacktrace. Set to true to enable.\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Project Issues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/issues/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"issues",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "se:*dirk*",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "images"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/list-a-projects-issues/](https://docs.sentry.io/api/events/list-a-projects-issues/)\n\nReturn a list of issues (groups) bound to a project. All parameters are supplied as query string parameters.\n\nA default query of `is:unresolved` is applied. To return results with other statuses send an new query value (i.e. `?query=` for all results).\n\nThe `statsPeriod` parameter can be used to select the timeline stats which should be present. Possible values are: `\"\"` (disable),`\"24h\"`, `\"14d\"`\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the issues belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the issues belong to.\n\n### Query Parameters:\n\n`statsPeriod` *(string)*\n\nAn optional stat period (can be one of `\"24h\"`, `\"14d\"`, and `\"\"`).\n\n`shortIdLookup` *(boolean)*\n\nIf this is set to true then short IDs are looked up by this function as well. This can cause the return value of the function to return an event issue of a different project which is why this is an opt-in. Set to 1 to enable.\n\n`query` *(string)*\n\nAn optional Sentry structured search query. If not provided an implied `\"is:unresolved\"` is assumed.\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "List Tag Values for Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/tags/:key/values/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"tags",
								":key",
								"values",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3541430330"
								},
								{
									"key": "key",
									"value": "level"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/list-a-tags-values-related-to-an-issue/](https://docs.sentry.io/api/events/list-a-tags-values-related-to-an-issue/)\n\nReturns details for given tag key related to an issue.\n\nWhen [paginated](https://docs.sentry.io/api/pagination) can return at most 1000 values.\n\n### Path Parameters\n\n`issue_id` *(string)* REQUIRED\n\nThe ID of the issue to retrieve.\n\n`key` *(string)* REQUIRED\n\nThe tag key to look the values up for.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "List Issue Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/events/?full=true",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"events",
								""
							],
							"query": [
								{
									"key": "full",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "4190433766"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/list-an-issues-events/](https://docs.sentry.io/api/events/list-an-issues-events/)\n\nThis endpoint lists an issue's events.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue to retrieve.\n\n### Query Parameters:\n\n`full` *(boolean)*\n\nIf this is set to true then the event payload will include the full event body, including the stacktrace. Set to true to enable.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Get Issue Hashes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/hashes/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"hashes",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3541461004"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/list-an-issues-hashes/](https://docs.sentry.io/api/events/list-an-issues-hashes/)\n\nThis endpoint lists an issue's hashes, which are the generated checksums used to aggregate individual events.\n\n### Path Parameters\n\n`issue_id` *(string)* REQUIRED\n\nThe ID of the issue to retrieve.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Delete Issue",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/remove-an-issue/](https://docs.sentry.io/api/events/remove-an-issue/)\n\nRemoves an individual issue.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:admin`"
					},
					"response": []
				},
				{
					"name": "Retrieve Event for Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/events/:event_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"events",
								":event_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "android"
								},
								{
									"key": "event_id",
									"value": "1fb4f476eff141afbf1114a2c3f4b7fb"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/retrieve-an-event-for-a-project/](https://docs.sentry.io/api/events/retrieve-an-event-for-a-project/)\n\nReturn details on an individual event.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the event belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the event belongs to.\n\n`event_id` *(string)*REQUIRED\n\nThe ID of the event to retrieve. It is the hexadecimal ID as reported by the client.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Get Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3779445617",
									"description": "The Issue ID"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/retrieve-an-issue/](https://docs.sentry.io/api/events/retrieve-an-issue/)\n\nReturn details on an individual issue. This returns the basic stats for the issue (title, last seen, first seen), some overall numbers (number of comments, user reports) as well as the summarized event data.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Tag Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/tags/:key/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"tags",
								":key",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3541430330",
									"description": "The Issue ID"
								},
								{
									"key": "key",
									"value": "level"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/retrieve-tag-details/](https://docs.sentry.io/api/events/retrieve-tag-details/)\n\nReturns details for given tag key related to an issue.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue to retrieve.\n\n`key` *(string)*REQUIRED\n\nThe tag key to look the values up for.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Latest Event for Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/events/latest/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"events",
								"latest",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3779445617",
									"description": "The Issue ID"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/retrieve-the-latest-event-for-an-issue/](https://docs.sentry.io/api/events/retrieve-the-latest-event-for-an-issue/)\n\nRetrieves the details of the latest event for an issue.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Oldest Event for Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/events/oldest/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								"events",
								"oldest",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": "3541461004",
									"description": "The Issue ID"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/retrieve-the-oldest-event-for-an-issue/](https://docs.sentry.io/api/events/retrieve-the-oldest-event-for-an-issue/)\n\nRetrieves the details of the oldest event for an issue.\n\n### Path Parameters\n\n`issue_id` *(string)*REQUIRED\n\nThe ID of the issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:read`"
					},
					"response": []
				},
				{
					"name": "Update Issue",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"assignedTo\":\"dirk@quickstark.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/issues/:issue_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"issues",
								":issue_id",
								""
							],
							"variable": [
								{
									"key": "issue_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/events/update-an-issue/](https://docs.sentry.io/api/events/update-an-issue/)\n\nUpdates an individual issue's attributes. Only the attributes submitted are modified.\n\n### Path Parameters\n\n`issue_id` *(string)* REQUIRED\n\nThe ID of the group to retrieve.\n\n### Body Parameters\n\n`status` *(string)*\n\nThe new status for the issues. Valid values are `\"resolved\"`, `\"resolvedInNextRelease\"`, `\"unresolved\"`, and `\"ignored\"`.\n\n`assignedTo` *(string)*\n\nThe actor id (or username) of the user or team that should be assigned to this issue.\n\n`hasSeen` *(boolean)*\n\nIn case this API call is invoked with a user context this allows changing of the flag that indicates if the user has seen the event.\n\n`isBookmarked` *(boolean)*\n\nIn case this API call is invoked with a user context this allows changing of the bookmark flag.\n\n`isPublic` *(boolean)*\n\nSets the issue to public or private.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "List Organization's Available Integrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/integrations/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"integrations",
								""
							]
						},
						"description": "# List an Organization's Available Integrations\n\n[https://docs.sentry.io/api/integrations/list-an-organizations-available-integrations/](https://docs.sentry.io/api/integrations/list-an-organizations-available-integrations/)\n\nGET/api/0/organizations/{organization_slug}/integrations/\n\nLists all the available Integrations for an Organization.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`providerKey` _(string)_\n\nSpecific integration provider to filter by such as `slack`. See our [Integrations Documentation](https://docs.sentry.io/product/integrations/) for an updated list of providers.\n\n`features` _(array(string))_\n\nIntegration features to filter by. See our [Integrations Documentation](https://docs.sentry.io/product/integrations/) for an updated list of features. Current available ones are:\n\n- alert-rule\n    \n- chat-unfurl\n    \n- codeowners\n    \n- commits\n    \n- data-forwarding\n    \n- deployment\n    \n- enterprise-alert-rule\n    \n- enterprise-incident-management\n    \n- incident-management\n    \n- issue-basic\n    \n- issue-sync\n    \n- mobile\n    \n- serverless\n    \n- session-replay\n    \n- stacktrace-link\n    \n- ticket-rules\n    \n\n`includeConfig` _(boolean)_\n\nSpecify `True` to fetch third-party integration configurations. Note that this can add several seconds to the response time.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:integrations`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Integration Platform",
			"item": [
				{
					"name": "Create External Issue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueID\": \"\",\n    \"webUrl\": \"\",\n    \"project\": \"\",\n    \"identifier\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/sentry-app-installations/:uuid/external-issues/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"sentry-app-installations",
								":uuid",
								"external-issues",
								""
							],
							"variable": [
								{
									"key": "uuid",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/integration/create-an-external-issue/](https://docs.sentry.io/api/integration/create-an-external-issue/)\n\nCreate an external issue from an integration platform integration.\n\n### Path Parameters\n\n`uuid` *(string)*REQUIRED\n\nThe uuid of the integration platform integration.\n\n### Body Parameters\n\n`issueId` *(integer)*REQUIRED\n\nThe ID of the Sentry issue to link the external issue to.\n\n`webUrl` *(string)*REQUIRED\n\nThe URL of the external service to link the issue to.\n\n`project` *(string)*REQUIRED\n\nThe external service's project.\n\n`identifier` *(string)*REQUIRED\n\nA unique identifier of the external issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:write`"
					},
					"response": []
				},
				{
					"name": "Delete External Issue",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/sentry-app-installations/:uuid/external-issues/:external_issue_id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"sentry-app-installations",
								":uuid",
								"external-issues",
								":external_issue_id"
							],
							"variable": [
								{
									"key": "uuid",
									"value": null
								},
								{
									"key": "external_issue_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/integration/create-an-external-issue/](https://docs.sentry.io/api/integration/create-an-external-issue/)\n\nCreate an external issue from an integration platform integration.\n\n### Path Parameters\n\n`uuid` *(string)*REQUIRED\n\nThe uuid of the integration platform integration.\n\n### Body Parameters\n\n`issueId` *(integer)*REQUIRED\n\nThe ID of the Sentry issue to link the external issue to.\n\n`webUrl` *(string)*REQUIRED\n\nThe URL of the external service to link the issue to.\n\n`project` *(string)*REQUIRED\n\nThe external service's project.\n\n`identifier` *(string)*REQUIRED\n\nA unique identifier of the external issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:write`"
					},
					"response": []
				},
				{
					"name": "List Organization Integration Platforms",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/sentry-app-installations/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"sentry-app-installations",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/integration/create-an-external-issue/](https://docs.sentry.io/api/integration/create-an-external-issue/)\n\nCreate an external issue from an integration platform integration.\n\n### Path Parameters\n\n`uuid` *(string)*REQUIRED\n\nThe uuid of the integration platform integration.\n\n### Body Parameters\n\n`issueId` *(integer)*REQUIRED\n\nThe ID of the Sentry issue to link the external issue to.\n\n`webUrl` *(string)*REQUIRED\n\nThe URL of the external service to link the issue to.\n\n`project` *(string)*REQUIRED\n\nThe external service's project.\n\n`identifier` *(string)*REQUIRED\n\nA unique identifier of the external issue.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `event:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Delete Organization Member",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/members/:member_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"members",
								":member_id",
								""
							],
							"variable": [
								{
									"key": "member_id",
									"value": ""
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/delete-an-organization-member/](https://docs.sentry.io/api/organizations/delete-an-organization-member/)\n\nRemove an organization member.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`member_id` *(string)* REQUIRED\n\nThe member ID.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `member:admin`\n*   `member:read`\n*   `member:write`"
					},
					"response": []
				},
				{
					"name": "List Repository Commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/repos/:repo_id/commits/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"repos",
								":repo_id",
								"commits",
								""
							],
							"variable": [
								{
									"key": "repo_id",
									"value": "158207",
									"description": "Repo ID. Fetch from List Organization's Repos"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/list-a-repositorys-commits/](https://docs.sentry.io/api/organizations/list-a-repositorys-commits/)\n\nReturn a list of commits for a given repository.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe organization short name.\n\n`repo_id` *(string)*REQUIRED\n\nThe repository ID.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "List Organizations Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/projects/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"projects",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/list-an-organizations-projects/](https://docs.sentry.io/api/organizations/list-an-organizations-projects/)\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org:admin`\n*   `org:read`\n*   `org:write`"
					},
					"response": []
				},
				{
					"name": "List Organizations Repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/repos/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"repos",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/list-an-organizations-repositories/](https://docs.sentry.io/api/organizations/list-an-organizations-repositories/)\n\nReturn a list of version control repositories for a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe organization short name.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "List Organizations Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/users/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"users",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/list-an-organizations-users/](https://docs.sentry.io/api/organizations/list-an-organizations-users/)\n\nReturn a list of users that belong to a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the event ID should be looked up in.\n\n### Query Parameters:\n\n`project` *(string)*\n\nRestrict results to users who have access to a given project ID\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "List Organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								""
							],
							"query": [
								{
									"key": "owner",
									"value": null,
									"description": "Restrict results to organizations in which you are an organization owner.",
									"disabled": true
								},
								{
									"key": "cursor",
									"value": null,
									"description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
									"disabled": true
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/list-your-organizations/](https://docs.sentry.io/api/organizations/list-your-organizations/)\n\nReturn a list of organizations available to the authenticated session. This is particularly useful for requests with an user bound context. For API key based requests this will only return the organization that belongs to the key.\n\n### Query Parameters:\n\n`owner` *(boolean)*\n\nRestrict results to organizations in which you are an organization owner.\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "Resolve Short ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/shortids/:short_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"shortids",
								":short_id",
								""
							],
							"variable": [
								{
									"key": "short_id",
									"value": "0ab779af3e9e4de585763955f557b1c3"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/resolve-a-short-id/](https://docs.sentry.io/api/organizations/resolve-a-short-id/)\n\nThis resolves a short ID to the project slug and internal issue ID.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the short ID should be looked up in.\n\n`short_id` *(string)*REQUIRED\n\nThe short ID to look up.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "Resolve Event ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/eventids/:event_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"eventids",
								":event_id",
								""
							],
							"variable": [
								{
									"key": "event_id",
									"value": "dc925a96a1f84227bd25338ad685615b",
									"description": "The event ID to look up."
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/resolve-an-event-id/](https://docs.sentry.io/api/organizations/resolve-an-event-id/)\n\nThis resolves an event ID to the project slug and internal issue ID and internal event ID.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the event ID should be looked up in.\n\n`event_id` *(string)*REQUIRED\n\nThe event ID to look up.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Organization Member",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/members/:member_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"members",
								":member_id",
								""
							],
							"variable": [
								{
									"key": "member_id",
									"value": "2113073"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/retrieve-an-organization-member/](https://docs.sentry.io/api/organizations/retrieve-an-organization-member/)\n\nRetrieve an organization member's details.\n\nWill return a pending invite as long as it's already approved.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`member_id` *(string)*REQUIRED\n\nThe member ID.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `member:admin`\n*   `member:read`\n*   `member:write`"
					},
					"response": []
				},
				{
					"name": "Retrieve Organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/retrieve-an-organization/](https://docs.sentry.io/api/organizations/retrieve-an-organization/)\n\nReturn details on an individual organization including various details such as membership access, features, and teams.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization to look up.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Organization Events Counts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/stats_v2/?groupBy=project&field=sum(quantity)&statsPeriod=7d&project=-1&category=error",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"stats_v2",
								""
							],
							"query": [
								{
									"key": "groupBy",
									"value": "project"
								},
								{
									"key": "field",
									"value": "sum(quantity)"
								},
								{
									"key": "statsPeriod",
									"value": "7d"
								},
								{
									"key": "project",
									"value": "-1"
								},
								{
									"key": "category",
									"value": "error"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/retrieve-event-counts-for-an-organization-v2/](https://docs.sentry.io/api/organizations/retrieve-event-counts-for-an-organization-v2/)\n\nQuery event counts for your Organization. Select a field, define a date range, and group or filter by columns.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`statsPeriod` *(string)*\n\nThis defines the range of the time series, relative to now. The range is given in a  format. For example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks.You must either provide a `statsPeriod`, or a `start` and `end`.\n\n`interval` *(string)*\n\nThis is the resolution of the time series, given in the same format as `statsPeriod`. The default resolution is `1h` and the minimum resolution is currently restricted to `1h` as well. Intervals larger than `1d` are not supported, and the interval has to cleanly divide one day.\n\n`start` *(string)*\n\nThis defines the start of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `end` instead of `statsPeriod`.\n\n`end` *(string)*\n\nThis defines the inclusive end of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `start` instead of `statsPeriod`.\n\n`groupBy` *(array(string))*REQUIREDchoices:\n\n*   `outcome`\n*   `category`\n*   `reason`\n*   `project`\n    \n\ncan pass multiple groupBy parameters to group by multiple, e.g. `groupBy=project&groupBy=outcome` to group by multiple dimensions. Note that grouping by project can cause missing rows if the number of projects / interval is large. If you have a large number of projects, we recommend filtering and querying by them individually.Also note that grouping by projects does not currently support timeseries interval responses and will instead be a sum of the projectover the entire period specified.\n\n`field` *(string)*REQUIREDchoices:\n\n*   `sum(quantity)`\n*   `sum(times_seen)`\n    \n\nthe `sum(quantity)` field is bytes for attachments, and all others the 'event' count for those types of events.\n\n`sum(times_seen)` sums the number of times an event has been seen. For 'normal' event types, this will be equal to `sum(quantity)` for now. For sessions, quantity will sum the total number of events seen in a session, while `times_seen` will be the unique number of sessions. and for attachments, `times_seen` will be the total number of attachments, while quantity will be the total sum of attachment bytes.\n\n`project` *(array(null))*\n\nThe ID of the projects to filter by.\n\nUse `-1` to include all accessible projects.\n\n`category` *(string)*choices:\n\n*   `error`\n*   `transaction`\n*   `attachment`\n    \n\nIf filtering by attachments, you cannot filter by any other category due to quantity values becoming nonsensical (combining bytes and event counts).\n\nIf filtering by `error`, it will automatically add `default` and `security` as we currently roll those two categories into `error` for displaying.\n\n`outcome` *(string)*choices:\n\n*   `accepted`\n*   `filtered`\n*   `rate_limited`\n*   `invalid`\n*   `abuse`\n*   `client_discard`\n    \n\nSee [https://docs.sentry.io/product/stats/](https://docs.sentry.io/product/stats/) for more information on outcome statuses.\n\n`reason` *(string)*\n\nThe reason field will contain why an event was filtered/dropped.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org:admin`\n*   `org:read`\n*   `org:write`"
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/organizations/update-an-organization/](https://docs.sentry.io/api/organizations/update-an-organization/)\n\nUpdate various attributes and configurable settings for the given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization to update.\n\n### Body Parameters\n\n`name` *(string)*REQUIRED\n\nAn optional new name for the organization.\n\n`slug` *(string)*\n\nAn optional new slug for the organization. Needs to be available and unique.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Create New Client Key",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My New Key\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/keys/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"keys",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/create-a-new-client-key/](https://docs.sentry.io/api/projects/create-a-new-client-key/)\n\nCreate a new client key bound to a project. The key's secret and public key are generated by the server.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n### Body Parameters\n\n`name` *(string)*REQUIRED\n\nThe name for the new key.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Delete Client Key",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My New Key\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/keys/:key_id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "key_id",
									"value": "90d5ba5fa8f54cb4a6c76cdf20ae7700",
									"description": "The ID of the key to delete.\nCan be fetched with List Project Client Keys\n"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/delete-a-client-key/](https://docs.sentry.io/api/projects/delete-a-client-key/)\n\nDelete a client key.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n`key_id` *(string)*REQUIRED\n\nThe ID of the key to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:admin`"
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "postman-project"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/delete-a-project/](https://docs.sentry.io/api/projects/delete-a-project/)\n\nSchedules a project for deletion.\n\nDeletion happens asynchronously and therefore is not immediate. However once deletion has begun the state of a project changes and will be hidden from most public views.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the project belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:admin`"
					},
					"response": []
				},
				{
					"name": "Delete Project Debug Info File",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/files/dsyms/?id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"files",
								"dsyms",
								""
							],
							"query": [
								{
									"key": "id",
									"value": null,
									"description": "The ID of the DIF to delete."
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/delete-a-specific-projects-debug-information-file/](https://docs.sentry.io/api/projects/delete-a-specific-projects-debug-information-file/)\n\nDelete a debug information file for a given project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the file belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to delete the DIF.\n\n### Query Parameters:\n\n`id` *(string)*REQUIRED\n\nThe ID of the DIF to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:admin`"
					},
					"response": []
				},
				{
					"name": "List Project Client Keys",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My New Key\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/keys/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"keys",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": null,
									"description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-projects-client-keys/](https://docs.sentry.io/api/projects/list-a-projects-client-keys/)\n\nReturn a list of client keys bound to a project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Project Debug Info Files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/files/dsyms/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"files",
								"dsyms",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-projects-debug-information-files/](https://docs.sentry.io/api/projects/list-a-projects-debug-information-files/)\n\nRetrieve a list of debug information files for a given project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the file belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to list the DIFs of.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Project Service Hooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/hooks/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"hooks",
								""
							],
							"query": [
								{
									"key": "cursor",
									"value": null,
									"description": "A pointer to the last object fetched and its sort order; used to retrieve the next or previous results.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-projects-service-hooks/](https://docs.sentry.io/api/projects/list-a-projects-service-hooks/)\n\nReturn a list of service hooks bound to a project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Project User Feedback",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/user-feedback/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"user-feedback",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-projects-user-feedback/](https://docs.sentry.io/api/projects/list-a-projects-user-feedback/)\n\nReturn a list of user feedback items within this project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Get Project Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/users/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"users",
								""
							],
							"query": [
								{
									"key": "query",
									"value": null,
									"description": "Limit results to users matching the given query. Prefixes should be used to suggest the field to match on: id, email, username, ip. For example, query=email:foo@example.com",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-projects-users/](https://docs.sentry.io/api/projects/list-a-projects-users/)\n\nReturn a list of users seen within this project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project.\n\n### Query Parameters:\n\n`query` *(string)*\n\nLimit results to users matching the given query. Prefixes should be used to suggest the field to match on: `id`, `email`, `username`, `ip`. For example, `query=email:foo@example.com`\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Get Tag Values",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/tags/:key/values/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"tags",
								":key",
								"values",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "key",
									"value": "client_os",
									"description": "The tag key to look up."
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-a-tags-values/](https://docs.sentry.io/api/projects/list-a-tags-values/)\n\nReturn a list of values associated with this key. The `query` parameter can be used to to perform a \"contains\" match on values.\n\nWhen [paginated](https://docs.sentry.io/api/pagination) can return at most 1000 values.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project.\n\n`key` *(string)*REQUIRED\n\nThe tag key to look up.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/projects/list-your-projects/](https://docs.sentry.io/api/projects/list-your-projects/)\n\nReturn a list of projects available to the authenticated session.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Register Service Hook",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"https://e9c1f8a8dcebbc68f39582f9d3e39010.m.pipedream.net\",\n    \"events\": [\n        \"event.alert\",\n        \"event.created\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/hooks/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"hooks",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/register-a-new-service-hook/](https://docs.sentry.io/api/projects/register-a-new-service-hook/)\n\nRegister a new service hook on a project.\n\nEvents include:\n\n*   event.alert: An alert is generated for an event (via rules).\n*   event.created: A new event has been processed.\n    \n\nThis endpoint requires the 'servicehooks' feature to be enabled for your project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n### Body Parameters\n\n`url` *(string)*REQUIRED\n\nThe URL for the webhook.\n\n`events` *(array)*REQUIRED\n\nThe events to subscribe to.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Delete Service Hook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/hooks/:hook_id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "hook_id",
									"value": "36ad728eac6f4c98924491b56ba523d1"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/remove-a-service-hook/](https://docs.sentry.io/api/projects/remove-a-service-hook/)\n\nRemove a service hook.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n`hook_id` *(string)*REQUIRED\n\nThe GUID of the service hook.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:admin`"
					},
					"response": []
				},
				{
					"name": "Retrieve Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/retrieve-a-project/](https://docs.sentry.io/api/projects/retrieve-a-project/)\n\nReturn details on an individual project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the project belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Service Hook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/hooks/:hook_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"hooks",
								":hook_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "hook_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/retrieve-a-service-hook/](https://docs.sentry.io/api/projects/retrieve-a-service-hook/)\n\nReturn a service hook bound to a project.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n`hook_id` *(string)*REQUIRED\n\nThe GUID of the service hook.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Project Event Counts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/stats/?resolution=1d",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"stats",
								""
							],
							"query": [
								{
									"key": "stat",
									"value": null,
									"description": "The name of the stat to query (\"received\", \"rejected\", \"blacklisted\", \"generated\").",
									"disabled": true
								},
								{
									"key": "since",
									"value": null,
									"description": "A timestamp to set the start of the query in seconds since UNIX epoch.",
									"disabled": true
								},
								{
									"key": "until",
									"value": null,
									"description": "A timestamp to set the end of the query in seconds since UNIX epoch.",
									"disabled": true
								},
								{
									"key": "resolution",
									"value": "1d",
									"description": "An explicit resolution to search for (one of 10s, 1h, and 1d)"
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/retrieve-event-counts-for-a-project/](https://docs.sentry.io/api/projects/retrieve-event-counts-for-a-project/)\n\nCaution This endpoint may change in the future without notice.\n\nReturn a set of points representing a normalized timestamp and the number of events seen in the period.\n\nQuery ranges are limited to Sentry's configured time-series resolutions.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project.\n\n### Query Parameters:\n\n`stat` *(string)*choices:\n\n*   `received`\n*   `rejected`\n*   `blacklisted`\n*   `generated`\n    \n\nThe name of the stat to query `(\"received\", \"rejected\", \"blacklisted\", \"generated\")`.\n\n`since` *(string)*\n\nA timestamp to set the start of the query in seconds since UNIX epoch.\n\n`until` *(string)*\n\nA timestamp to set the end of the query in seconds since UNIX epoch.\n\n`resolution` *(string)*choices:\n\n*   `10s`\n*   `1h`\n*   `1d`\n    \n\nAn explicit resolution to search for (one of `10s`, `1h`, and `1d`).\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "Submit User Feedback",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_id\": \"903505d13c6a4a58a496ca13eb88d624\",\n    \"name\": \"Dirk Feedback Test\",\n    \"email\": \"stanbeeman89012@gmail.com\",\n    \"comments\": \"This was a problem\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/user-feedback/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"user-feedback",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/submit-user-feedback/](https://docs.sentry.io/api/projects/submit-user-feedback/)\n\nSubmit and associate user feedback with an issue.\n\nFeedback must be received by the server no more than 30 minutes after the event was saved.\n\nAdditionally, within 5 minutes of submitting feedback it may also be overwritten. This is useful in situations where you may need to retry sending a request due to network failures.\n\nIf feedback is rejected due to a mutability threshold, a 409 status code will be returned.\n\nNote: Feedback may be submitted with DSN authentication (see auth documentation).\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project.\n\n### Body Parameters\n\n`event_id` *(string)*REQUIRED\n\nThe event ID. This can be retrieved from the [beforeSend callback](https://docs.sentry.io/platforms/javascript/configuration/filtering/#using-beforesend).\n\n`name` *(string)*REQUIRED\n\nUser's name.\n\n`email` *(string)*REQUIRED\n\nUser's email address.\n\n`comments` *(string)*REQUIRED\n\nComments supplied by user.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Update Client Key",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Updated Key\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/keys/:key_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"keys",
								":key_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "key_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/update-a-client-key/](https://docs.sentry.io/api/projects/update-a-client-key/)\n\nUpdate a client key. This can be used to rename a key.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n`key_id` *(string)*REQUIRED\n\nThe ID of the key to update.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe new name for the client key.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Netlify Sentry Toolbox\",\n    \"slug\": \"New Slug\",\n    \"platform\": \"The New Platform\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/update-a-project/](https://docs.sentry.io/api/projects/update-a-project/)\n\nUpdate various attributes and configurable settings for the given project. Only supplied values are updated.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the project belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to update.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe new name for the project.\n\n`slug` *(string)*\n\nThe new slug for the project.\n\n`platform` *(string)*\n\nThe new platform for the project.\n\n`isBookmarked` *(boolean)*\n\nIn case this API call is invoked with a user context this allows changing of the bookmark flag.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Update Service Hook",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"New Hook URL\",\n    \"events\": \"New Events to Subscribe to\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/hooks/:hook_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"hooks",
								":hook_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "hook_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/update-a-service-hook/](https://docs.sentry.io/api/projects/update-a-service-hook/)\n\nUpdate a service hook.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the client keys belong to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project the client keys belong to.\n\n`hook_id` *(string)*REQUIRED\n\nThe GUID of the service hook.\n\n### Body Parameters\n\n`url` *(string)*REQUIRED\n\nThe URL for the webhook.\n\n`events` *(array)*REQUIRED\n\nThe events to subscribe to.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Upload New File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/files/dsyms/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"files",
								"dsyms",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/projects/upload-a-new-file/](https://docs.sentry.io/api/projects/upload-a-new-file/)\n\nUpload a new debug information file for the given release.\n\nUnlike other API requests, files must be uploaded using the traditional multipart/form-data content-type.\n\nThe file uploaded is a zip archive of an Apple .dSYM folder which contains the individual debug images. Uploading through this endpoint will create different files for the contained images.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the project belongs to.\n\n`project_slug` *(string)*REQUIRED\n\nThe slug of the project to upload a file to.\n\n### Body Parameters\n\n`file` *(string)*REQUIRED\n\nThe multipart encoded file.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Releases",
			"item": [
				{
					"name": "Create a Deploy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": \"production\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/{{version}}/deploys/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								"{{version}}",
								"deploys",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/releases/create-a-new-deploy-for-an-organization/](https://docs.sentry.io/api/releases/create-a-new-deploy-for-an-organization/)\n\nCreate a deploy.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Body Parameters\n\n`environment` *(string)* REQUIRED\n\nThe environment you're deploying to.\n\n`url` *(string)*\n\nThe optional URL that points to the deploy.\n\n`name` *(string)*\n\nThe optional name of the deploy.\n\n`projects` *(array)*\n\nThe optional list of projects to deploy.\n\n`dateStarted` *(string)*\n\nAn optional date that indicates when the deploy started.\n\n`dateFinished` *(string)*\n\nAn optional date that indicates when the deploy ended. If not provided, the current time is used.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Create a Release",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": \"javascript@1.0.3\", \n    \"url\": null,\n    \"ref\":\"mx\",\n    \"projects\": [\"images\", \"fastapi\"],\n    \"dateReleased\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/releases/create-a-new-release-for-an-organization/](https://docs.sentry.io/api/releases/create-a-new-release-for-an-organization/)\n\nCreate a new release for the given organization. Releases are used by Sentry to improve its error reporting abilities by correlating first seen events with the release that might have introduced the problem. Releases are also necessary for source maps and other debug features that require manual upload for functioning well.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n### Body Parameters\n\n`version` *(string)* REQUIRED\n\nA version identifier for this release. Can be a version number, a commit hash, etc.\n\n`ref` *(string)*\n\nAn optional commit reference. This is useful if a tagged version has been provided.\n\n`url` *(string)*\n\nA URL that points to the release. This can be the path to an online interface to the source code for instance\n\n`projects` *(array)* REQUIRED\n\nA list of project slugs that are involved in this release.\n\n`dateReleased` *(string)*\n\nAn optional date that indicates when the release went live. If not provided the current time is assumed.\n\n`commits` *(array)*\n\nAn optional list of commit data to be associated with the release. Commits must include parameters `id` (the SHA of the commit), and can optionally include `repository`, `message`, `patch_set`, `author_name`, `author_email`, and `timestamp`.\n\n`refs` *(array)*\n\nAn optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data. `commit` may contain a range in the form of `previousCommit..commit`.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Delete Project Release File",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": \"1.0.1\", //string\n    \"ref\": null, //string\n    \"url\": null, //string\n    \"projects\": null, //array\n    \"dateReleased\": null, //ISO Date : 2020-08-31T19:40:38.651670Z\n    \"commits\": null, //array\n    \"refs\": null //array\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/:project_slug/releases/:version/files/:file_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"files",
								":file_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/delete-a-project-releases-file/](https://docs.sentry.io/api/releases/delete-a-project-releases-file/)\n\nDelete a file for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Delete Organization Release File",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": \"1.0.1\", //string\n    \"ref\": null, //string\n    \"url\": null, //string\n    \"projects\": null, //array\n    \"dateReleased\": null, //ISO Date : 2020-08-31T19:40:38.651670Z\n    \"commits\": null, //array\n    \"refs\": null //array\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/files/:file_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"files",
								":file_id",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/delete-an-organization-releases-file/](https://docs.sentry.io/api/releases/delete-an-organization-releases-file/)\n\nDelete a file for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to delete.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Delete Organization Release",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"version\": \"1.0.1\", //string\n    \"ref\": null, //string\n    \"url\": null, //string\n    \"projects\": null, //array\n    \"dateReleased\": null, //ISO Date : 2020-08-31T19:40:38.651670Z\n    \"commits\": null, //array\n    \"refs\": null //array\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "react-sentry-github@v0.1.0"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/delete-an-organizations-release/](https://docs.sentry.io/api/releases/delete-an-organizations-release/)\n\nDelete a release for a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Project Release Commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/releases/:version/commits/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"commits",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": "sentry-formula-one@1.0.1"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-a-project-releases-commits/](https://docs.sentry.io/api/releases/list-a-project-releases-commits/)\n\nList a project release's commits.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Project Release Files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/releases/:version/files/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"files",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-a-projects-release-files/](https://docs.sentry.io/api/releases/list-a-projects-release-files/)\n\nReturn a list of files for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Release Deploys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/deploys/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"deploys",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "sentry-release-test@1.0.0"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-a-releases-deploys/](https://docs.sentry.io/api/releases/list-a-releases-deploys/)\n\nReturn a list of deploys for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Organization Release's Commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/commits/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"commits",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "dirktest@1.0.0"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-an-organization-releases-commits/](https://docs.sentry.io/api/releases/list-an-organization-releases-commits/)\n\nList an organization release's commits.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Organization Release's Files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/files/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"files",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "dirktest@1.0.0"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-an-organizations-release-files/](https://docs.sentry.io/api/releases/list-an-organizations-release-files/)\n\nReturn a list of files for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Organization Releases",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-an-organizations-releases/](https://docs.sentry.io/api/releases/list-an-organizations-releases/)\n\nReturn a list of releases for a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n### Query Parameters:\n\n`query` *(string)*\n\nThis parameter can be used to create a \"starts with\" filter for the version.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "List Issues Resolved in a Release",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/releases/:version/resolved/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"resolved",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": "dirktest@1.0.0"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/list-issues-to-be-resolved-in-a-particular-release/](https://docs.sentry.io/api/releases/list-issues-to-be-resolved-in-a-particular-release/)\n\nNote: This API is intended to pull Issues designated to be fixed in a release as per the Issue dropdown.\n\n![](https://content.pstmn.io/b9753157-9d9c-4efd-a93d-c23fa529684d/UmVzb2x2ZSBpbiBOZXh0IFJlbGVhc2UuZ2lm)\n\nList issues to be resolved in a particular release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Retrieve Project Release File",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/releases/:version/files/:file_id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"files",
								":file_id"
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/retrieve-a-project-releases-file/](https://docs.sentry.io/api/releases/retrieve-a-project-releases-file/)\n\nRetrieve a file for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Retrieve Organization Release File",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/releases/:version/files/:file_id",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								"releases",
								":version",
								"files",
								":file_id"
							],
							"variable": [
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/retrieve-an-organization-releases-file/](https://docs.sentry.io/api/releases/retrieve-an-organization-releases-file/)\n\nRetrieve a file for a given release.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Retrieve Organization Releases",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "application.monitoring.javascript@23.8.3"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/retrieve-an-organizations-releases/](https://docs.sentry.io/api/releases/retrieve-an-organizations-releases/)\n\nReturn a release for a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Retrieve Files Changed in Release Commit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/commitfiles/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"commitfiles",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": "application.monitoring.javascript@22.8.5"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/retrieve-files-changed-in-a-releases-commits/](https://docs.sentry.io/api/releases/retrieve-files-changed-in-a-releases-commits/)\n\nRetrieve files changed in a release's commits\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Retrieve Release Health Session Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/sessions/?project=-1&field=count_unique(user)&groupBy=release&statsPeriod=1d&interval=1h",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"sessions",
								""
							],
							"query": [
								{
									"key": "project",
									"value": "-1"
								},
								{
									"key": "field",
									"value": "count_unique(user)"
								},
								{
									"key": "field",
									"value": "p95(session.duration)",
									"disabled": true
								},
								{
									"key": "environment",
									"value": "",
									"disabled": true
								},
								{
									"key": "groupBy",
									"value": "release"
								},
								{
									"key": "query",
									"value": "",
									"disabled": true
								},
								{
									"key": "statsPeriod",
									"value": "1d"
								},
								{
									"key": "interval",
									"value": "1h"
								},
								{
									"key": "statsPeriodStart",
									"value": "",
									"disabled": true
								},
								{
									"key": "statsPeriodEnd",
									"value": "",
									"disabled": true
								},
								{
									"key": "start",
									"value": "",
									"disabled": true
								},
								{
									"key": "end",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/retrieve-release-health-session-statistics/](https://docs.sentry.io/api/releases/retrieve-release-health-session-statistics/)\n\nReturns a time series of release health session statistics for projects bound to an organization.\n\nThe interval and date range are subject to certain restrictions and rounding rules.\n\nThe date range is rounded to align with the interval, and is rounded to at least one hour. The interval can at most be one day and at least one hour currently. It has to cleanly divide one day, for rounding reasons.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n### Query Parameters:\n\n`project` *(array(integer))* REQUIRED\n\nThe ID of the projects to filter by.\n\nUse `-1` to include all accessible projects.\n\n`field` *(array(string))* REQUIRED\n\nThe list of fields to query.\n\nThe available fields are `sum(session)`, `count_unique(user)`, and the following functions applied to the `session.duration` metric: `avg`, `p50`, `p75`, `p90`, `p95`, `p99` and `max`.\n\nFor example, `p99(session.duration)`.\n\n`environment` *(array(string))*\n\nThe name of environments to filter by.\n\n`groupBy` *(array(string))*\n\nThe list of properties to group by.\n\nThe available groupBy conditions are `project`, `release`, `environment` and `session.status`.\n\n`query` *(string)*\n\nA free-form query that is applied as a filter.\n\nAn example query could be `release:\"1.1.0\" or release:\"1.2.0\"`.\n\n`statsPeriod` *(string)*\n\nThis defines the range of the time series, relative to now.\n\nThe range is given in a `\"\"` format.\n\nFor example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks.\n\nIt defaults to `90d`.\n\n`interval` *(string)*\n\nThis is the resolution of the time series, given in the same format as `statsPeriod`.\n\nThe default resolution is `1h` and the minimum resolution is currently restricted to `1h` as well.\n\nIntervals larger than `1d` are not supported, and the interval has to cleanly divide one day.\n\n`statsPeriodStart` *(string)*\n\nThis defines the start of the time series range, in the same format as the `interval`, relative to now.\n\n`statsPeriodEnd` *(string)*\n\nThis defines the end of the time series range, in the same format as the `interval`, relative to now.\n\n`start` *(string)*\n\nThis defines the start of the time series range as an explicit datetime.\n\n`end` *(string)*\n\nThis defines the inclusive end of the time series range as an explicit datetime.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `org: read`"
					},
					"response": []
				},
				{
					"name": "Update Project Release File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"dateReleased\":\"2022-08-30T19:21:56+0000\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/releases/:version/files/:file_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"files",
								":file_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/update-a-project-release-file/](https://docs.sentry.io/api/releases/update-a-project-release-file/)\n\nUpdate a project release file.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to retrieve.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe new name (full path) of the file.\n\n`dist` *(string)*\n\nThe new name of the dist.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Update Organization Release File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"dateReleased\":\"2022-08-30T19:21:56+0000\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/releases/:version/files/:file_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								"releases",
								":version",
								"files",
								":file_id",
								""
							],
							"variable": [
								{
									"key": "version",
									"value": null
								},
								{
									"key": "file_id",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/update-an-organization-release-file/](https://docs.sentry.io/api/releases/update-an-organization-release-file/)\n\nUpdate an organization release file.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n`file_id` *(string)* REQUIRED\n\nThe ID of the file to retrieve.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe new name (full path) of the file.\n\n`dist` *(string)*\n\nThe new name of the dist.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Update Organization Release",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"dateReleased\":null}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								""
							],
							"query": [
								{
									"key": "dateReleased",
									"value": "2022-08-30T15:07:12.201937Z",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": "sentry-release-test4@1.0.1"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/update-an-organizations-release/](https://docs.sentry.io/api/releases/update-an-organizations-release/)\n\nUpdate a release for a given organization.\n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization the release belongs to.\n\n`version` *(string)*REQUIRED\n\nThe version identifier of the release.\n\n### Body Parameters\n\n`ref` *(string)*\n\nAn optional commit reference. This is useful if a tagged version has been provided.\n\n`url` *(string)*\n\nA URL that points to the release. This can be the path to an online interface to the source code for instance.\n\n`dateReleased` *(string)*\n\nAn optional date that indicates when the release went live. If not provided the current time is assumed.\n\n`commits` *(array)*\n\nAn optional list of commit data to be associated with the release. Commits must include parameters `id` (the sha of the commit), and can optionally include `repository`, `message`, `author_name`, `author_email`, and `timestamp`.\n\n`refs` *(array)*\n\nAn optional way to indicate the start and end commits for each repository included in a release. Head commits must include parameters `repository` and `commit` (the HEAD sha). They can optionally include `previousCommit` (the sha of the HEAD of the previous release), which should be specified if this is the first time you've sent commit data.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Upload Organization Release File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My New File Name\",\n    \"file\": \"release.min.js\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/releases/:version/files/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"releases",
								":version",
								"files",
								""
							],
							"query": [
								{
									"key": "dateReleased",
									"value": "2022-08-30T15:07:12.201937Z",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "version",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/upload-a-new-organization-release-file/](https://docs.sentry.io/api/releases/upload-a-new-organization-release-file/)\n\nUpload a new organization release file.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe name (full path) of the file.\n\n`file` *(string)* REQUIRED\n\nThe multipart encoded file.\n\n`dist` *(string)*\n\nThe name of the dist.\n\n`header` *(string)*\n\nThis parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				},
				{
					"name": "Upload Project Release File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My New File Name\",\n    \"file\": \"release.min.js\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/:project_slug/releases/:version/files/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								":project_slug",
								"releases",
								":version",
								"files",
								""
							],
							"query": [
								{
									"key": "dateReleased",
									"value": "2022-08-30T15:07:12.201937Z",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "version",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/releases/upload-a-new-project-release-file/](https://docs.sentry.io/api/releases/upload-a-new-project-release-file/)\n\nUpload a new project release file.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n`project_slug` *(string)* REQUIRED\n\nThe slug of the project.\n\n`version` *(string)* REQUIRED\n\nThe version identifier of the release.\n\n### Body Parameters\n\n`name` *(string)*\n\nThe name (full path) of the file.\n\n`file` *(string)* REQUIRED\n\nThe multipart encoded file.\n\n`dist` *(string)*\n\nThe name of the dist.\n\n`header` *(string)*\n\nThis parameter can be supplied multiple times to attach headers to the file. Each header is a string in the format `key:value`. For instance it can be used to define a content type.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:releases`"
					},
					"response": []
				}
			],
			"description": "### Sentry Releases API\n\n*   `Version` is required for many of these calls\n*   Should be full `version` not just the raw or semantic number\n*   *For example:* `\"application.monitoring.javascript@22.8.5\"`\n    \n\n![](https://content.pstmn.io/e44c7e19-2800-485a-bf89-f84c67708270/U2VudHJ5IC0gUmVsZWFzZXMgLSBDb3B5IFZlcnNpb24uZ2lm)"
		},
		{
			"name": "Replays",
			"item": [
				{
					"name": "Delete a Replay Instance",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/replays/:replay_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"replays",
								":replay_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": ""
								},
								{
									"key": "replay_id",
									"value": ""
								}
							]
						},
						"description": "# Delete a Replay Instance\n\n[https://docs.sentry.io/api/replays/delete-a-replay-instance/](https://docs.sentry.io/api/replays/delete-a-replay-instance/)\n\nDELETE/api/0/projects/{organization_slug}/{project_slug}/replays/{replay_id}/\n\nDelete a replay\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`replay_id` _(string)_REQUIRED\n\nThe ID of the replay you'd like to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "Fetch Recording Segment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/replays/:replay_id/recording-segments/:segment_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"replays",
								":replay_id",
								"recording-segments",
								":segment_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "react"
								},
								{
									"key": "replay_id",
									"value": "a65e334126dc4685b1cc4605ab3f09e9"
								},
								{
									"key": "segment_id",
									"value": "112"
								}
							]
						},
						"description": "# Fetch Recording Segment\n\n[https://docs.sentry.io/api/replays/fetch-recording-segment/](https://docs.sentry.io/api/replays/fetch-recording-segment/)\n\nGET/api/0/projects/{organization_slug}/{project_slug}/replays/{replay_id}/recording-segments/{segment_id}/\n\nReturn a replay recording segment.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`replay_id` _(string)_REQUIRED\n\nThe ID of the replay you'd like to retrieve.\n\n`segment_id` _(integer)_REQUIRED\n\nThe ID of the segment you'd like to retrieve.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "List an Org Replays",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/replays/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"replays",
								""
							]
						},
						"description": "# List an Organization's Replays\n\n[https://docs.sentry.io/api/replays/list-an-organizations-replays/](https://docs.sentry.io/api/replays/list-an-organizations-replays/)\n\nGET/api/0/organizations/{organization_slug}/replays/\n\nReturn a list of replays belonging to an organization.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`statsPeriod` _(string)_\n\nThis defines the range of the time series, relative to now. The range is given in a  format. For example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks. You must either provide a `statsPeriod`, or a `start` and `end`.\n\n`start` _(string)_\n\nThis defines the start of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds. Use along with `end` instead of `statsPeriod`.\n\n`end` _(string)_\n\nThis defines the inclusive end of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds. Use along with `start` instead of `statsPeriod`.\n\n`field` _(array(string))_**choices**:\n\n- `activity`\n    \n- `browser`\n    \n- `count_dead_clicks`\n    \n- `count_errors`\n    \n- `count_rage_clicks`\n    \n- `count_segments`\n    \n- `count_urls`\n    \n- `device`\n    \n- `dist`\n    \n- `duration`\n    \n- `environment`\n    \n- `error_ids`\n    \n- `finished_at`\n    \n- `id`\n    \n- `is_archived`\n    \n- `os`\n    \n- `platform`\n    \n- `project_id`\n    \n- `releases`\n    \n- `sdk`\n    \n- `started_at`\n    \n- `tags`\n    \n- `trace_ids`\n    \n- `urls`\n    \n- `user`\n    \n- `clicks`\n    \n- `info_ids`\n    \n- `warning_ids`\n    \n- `count_warnings`\n    \n- `count_infos`\n    \n\nSpecifies a field that should be marshaled in the output. Invalid fields will be rejected.\n\n`project` _(array(integer))_\n\nThe ID of the projects to filter by.\n\n`environment` _(string)_\n\nThe environment to filter by.\n\n`sort` _(string)_\n\nThe field to sort the output by.\n\n`query` _(string)_\n\nA structured query string to filter the output by.\n\n`per_page` _(integer)_\n\nLimit the number of rows to return in the result.\n\n`cursor` _(string)_\n\nThe cursor parameter is used to paginate results. See [here](https://docs.sentry.io/api/pagination/) for how to use this query parameter\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "List an Orgs Selectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/replay-selectors/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"replay-selectors",
								""
							]
						},
						"description": "# List an Organization's Selectors\n\n[https://docs.sentry.io/api/replays/list-an-organizations-selectors/](https://docs.sentry.io/api/replays/list-an-organizations-selectors/)\n\nGET/api/0/organizations/{organization_slug}/replay-selectors/\n\nReturn a list of selectors for a given organization.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`environment` _(array(string))_\n\nThe name of environments to filter by.\n\n`statsPeriod` _(string)_\n\nThis defines the range of the time series, relative to now. The range is given in a  format. For example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks.You must either provide a `statsPeriod`, or a `start` and `end`.\n\n`start` _(string)_\n\nThis defines the start of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `end` instead of `statsPeriod`.\n\n`end` _(string)_\n\nThis defines the inclusive end of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds.Use along with `start` instead of `statsPeriod`.\n\n`project` _(array(undefined))_\n\nThe ID of the projects to filter by.\n\n`sort` _(string)_\n\nThe field to sort the output by.\n\n`cursor` _(string)_\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n`per_page` _(integer)_\n\nLimit the number of rows to return in the result. Default and maximum allowed is 100.\n\n`query` _(string)_\n\nThe search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/).\n\nexample: `query=(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)`\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`\n    \n\n```\ncurl https://sentry.io/api/0/organizations/{organization_slug}/replay-selectors/ \\\n -H &#x27;Authorization: Bearer <auth_token>&#x27;\n\n ```\n\nRESPONSESCHEMA200400403\n\n```\n{\n  \"data\": [\n    {\n      \"count_dead_clicks\": 2,\n      \"count_rage_clicks\": 1,\n      \"dom_element\": \"div#myid.class1.class2\",\n      \"element\": {\n        \"alt\": \"\",\n        \"aria_label\": \"\",\n        \"class\": [\n          \"class1\",\n          \"class2\"\n        ],\n        \"id\": \"myid\",\n        \"role\": \"\",\n        \"tag\": \"div\",\n        \"testid\": \"\",\n        \"title\": \"\"\n      },\n      \"project_id\": \"1\"\n    }\n  ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "List Clicked Nodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/replays/:replay_id/clicks/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"replays",
								":replay_id",
								"clicks",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "react"
								},
								{
									"key": "replay_id",
									"value": "a65e334126dc4685b1cc4605ab3f09e9"
								}
							]
						},
						"description": "# List Clicked Nodes\n\n[https://docs.sentry.io/api/replays/list-clicked-nodes/](https://docs.sentry.io/api/replays/list-clicked-nodes/)\n\nGET/api/0/projects/{organization_slug}/{project_slug}/replays/{replay_id}/clicks/\n\nRetrieve a collection of RRWeb DOM node-ids and the timestamp they were clicked.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`replay_id` _(string)_REQUIRED\n\nThe ID of the replay you'd like to retrieve.\n\n### Query Parameters:\n\n`cursor` _(string)_\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n`environment` _(array(string))_\n\nThe name of environments to filter by.\n\n`per_page` _(integer)_\n\nLimit the number of rows to return in the result. Default and maximum allowed is 100.\n\n`query` _(string)_\n\nThe search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/).\n\nexample: `query=(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)`\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "List Recording Segments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/replays/:replay_id/recording-segments/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"replays",
								":replay_id",
								"recording-segments",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "react"
								},
								{
									"key": "replay_id",
									"value": "a65e334126dc4685b1cc4605ab3f09e9"
								}
							]
						},
						"description": "# List Recording Segments\n\n[https://docs.sentry.io/api/replays/list-recording-segments/](https://docs.sentry.io/api/replays/list-recording-segments/)\n\nGET/api/0/projects/{organization_slug}/{project_slug}/replays/{replay_id}/recording-segments/\n\nReturn a collection of replay recording segments.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`project_slug` _(string)_REQUIRED\n\nThe slug of the project the resource belongs to.\n\n`replay_id` _(string)_REQUIRED\n\nThe ID of the replay you'd like to retrieve.\n\n### Query Parameters:\n\n`cursor` _(string)_\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n`per_page` _(integer)_\n\nLimit the number of rows to return in the result. Default and maximum allowed is 100.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `project:admin`\n    \n- `project:read`\n    \n- `project:write`"
					},
					"response": []
				},
				{
					"name": "Retrieve a Replay Instance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/replays/:replay_id/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"replays",
								":replay_id",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "react"
								},
								{
									"key": "replay_id",
									"value": "a65e334126dc4685b1cc4605ab3f09e9"
								}
							]
						},
						"description": "# Retrieve a Replay Instance\n\n[https://docs.sentry.io/api/replays/retrieve-a-replay-instance/](https://docs.sentry.io/api/replays/retrieve-a-replay-instance/)\n\nGET/api/0/organizations/{organization_slug}/replays/{replay_id}/\n\nReturn details on an individual replay.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n`replay_id` _(string)_REQUIRED\n\nThe ID of the replay you'd like to retrieve.\n\n### Query Parameters:\n\n`statsPeriod` _(string)_\n\nThis defines the range of the time series, relative to now. The range is given in a  format. For example `1d` for a one day range. Possible units are `m` for minutes, `h` for hours, `d` for days and `w` for weeks. You must either provide a `statsPeriod`, or a `start` and `end`.\n\n`start` _(string)_\n\nThis defines the start of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds. Use along with `end` instead of `statsPeriod`.\n\n`end` _(string)_\n\nThis defines the inclusive end of the time series range as an explicit datetime, either in UTC ISO8601 or epoch seconds. Use along with `start` instead of `statsPeriod`.\n\n`field` _(array(string))_**choices**:\n\n- `activity`\n    \n- `browser`\n    \n- `count_dead_clicks`\n    \n- `count_errors`\n    \n- `count_rage_clicks`\n    \n- `count_segments`\n    \n- `count_urls`\n    \n- `device`\n    \n- `dist`\n    \n- `duration`\n    \n- `environment`\n    \n- `error_ids`\n    \n- `finished_at`\n    \n- `id`\n    \n- `is_archived`\n    \n- `os`\n    \n- `platform`\n    \n- `project_id`\n    \n- `releases`\n    \n- `sdk`\n    \n- `started_at`\n    \n- `tags`\n    \n- `trace_ids`\n    \n- `urls`\n    \n- `user`\n    \n- `clicks`\n    \n- `info_ids`\n    \n- `warning_ids`\n    \n- `count_warnings`\n    \n- `count_infos`\n    \n\nSpecifies a field that should be marshaled in the output. Invalid fields will be rejected.\n\n`project` _(array(integer))_\n\nThe ID of the projects to filter by.\n\n`environment` _(string)_\n\nThe environment to filter by.\n\n`sort` _(string)_\n\nThe field to sort the output by.\n\n`query` _(string)_\n\nA structured query string to filter the output by.\n\n`per_page` _(integer)_\n\nLimit the number of rows to return in the result.\n\n`cursor` _(string)_\n\nThe cursor parameter is used to paginate results. See [here](https://docs.sentry.io/api/pagination/) for how to use this query parameter\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n    \n- `org:read`\n    \n- `org:write`"
					},
					"response": []
				},
				{
					"name": "Return Org Replay Count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/replay-count/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"replay-count",
								""
							]
						},
						"description": "# Return a Count of Replays\n\n[https://docs.sentry.io/api/replays/return-a-count-of-replays/](https://docs.sentry.io/api/replays/return-a-count-of-replays/)\n\nGET/api/0/organizations/{organization_slug}/replay-count/\n\nReturn a count of replays for the given issue or transaction id.\n\n### Path Parameters\n\n`organization_slug` _(string)_REQUIRED\n\nThe slug of the organization the resource belongs to.\n\n### Query Parameters:\n\n`end` _(string)_\n\nThe end of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`.\n\n`environment` _(array(string))_\n\nThe name of environments to filter by.\n\n`start` _(string)_\n\nThe start of the period of time for the query, expected in ISO-8601 format. For example `2001-12-14T12:34:56.7890`.\n\n`statsPeriod` _(string)_\n\nThe period of time for the query, will override the start & end parameters, a number followed by one of:\n\n- `d` for days\n- `h` for hours\n- `m` for minutes\n- `s` for seconds\n- `w` for weeks\n    \n\nFor example `24h`, to mean query data starting from 24 hours ago to now.\n\n`project` _(array(integer))_\n\nThe IDs of projects to filter by. `-1` means all available projects. For example the following are valid parameters:\n\n- `/?project=1234&project=56789`\n- `/?project=-1`\n    \n\n`query` _(string)_\n\nThe search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/).\n\nexample: `query=(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)`\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth/) requires one of the following scopes:\n\n- `org:admin`\n- `org:read`\n- `org:write`\n    \n\n```\ncurl https://sentry.io/api/0/organizations/{organization_slug}/replay-count/ \\\n -H &#x27;Authorization: Bearer <auth_token>&#x27;\n\n ```\n\nRESPONSESCHEMA200400403\n\n```\n{\n  \"1\": 9,\n  \"2\": 0,\n  \"5\": 0,\n  \"9\": 1,\n  \"10\": 29\n}\n\n ```"
					},
					"response": []
				}
			]
		},
		{
			"name": "SCIM",
			"item": [
				{
					"name": "Provision New Team",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/scim/v2/Groups",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"scim",
								"v2",
								"Groups"
							]
						},
						"description": "[https://docs.sentry.io/api/scim/provision-a-new-team/](https://docs.sentry.io/api/scim/provision-a-new-team/)\n\nCreate a new team bound to an organization via a SCIM Groups POST Request. Note that teams are always created with an empty member set. The endpoint will also do a normalization of uppercase / spaces to lowercase and dashes.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:write`"
					},
					"response": []
				},
				{
					"name": "List Organizations Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/scim/v2/Groups",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"scim",
								"v2",
								"Groups"
							]
						},
						"description": "[https://docs.sentry.io/api/scim/list-an-organizations-paginated-teams/](https://docs.sentry.io/api/scim/list-an-organizations-paginated-teams/)\n\nReturns a paginated list of teams bound to a organization with a SCIM Groups GET Request.\n\n*   Note that the members field will only contain up to 10000 members.\n    \n\n### Path Parameters\n\n`organization_slug` *(string)*REQUIRED\n\nThe slug of the organization.\n\n### Query Parameters:\n\n`startIndex` *(integer)*\n\nSCIM 1-offset based index for pagination.\n\n`filter` *(string)*\n\nA SCIM filter expression. The only operator currently supported is `eq`.\n\n`count` *(integer)*\n\nThe maximum number of results the query should return, maximum of 100.\n\n`excludedAttributes` *(string)*\n\nFields that should be left off of return values. Right now the only supported field for this query is `members`.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:read`"
					},
					"response": []
				}
			],
			"description": "System for Cross-Domain Identity Management ([SCIM](http://www.simplecloud.info/)) is a standard implemented by Identity Providers and applications in order to facilitate federated identity management. Through these APIs you can add and delete members as well as teams. Sentry SaaSSentry's cloud-based, software-as-a-service solution. customers must be on a Business Plan with SAML2 Enabled. SCIM uses a bearer tokenIn search, a key-value pair or raw search term. Also, a value used for authorization. for authentication that is created when SCIM is enabled. For how to enable SCIM, see our docs [here](https://docs.sentry.io/product/accounts/sso/#scim-provisioning). Sentry's SCIM API does not currently support syncing passwords, or setting any User attributes other than `active`."
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Create New Project",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"My New Project\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/projects/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								"projects",
								""
							],
							"variable": [
								{
									"key": "team_slug",
									"value": null
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/create-a-new-project/](https://docs.sentry.io/api/teams/create-a-new-project/)\n\nCreate a new project bound to a team.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to create a new project for.\n\n### Body Parameters\n\n`name` *(string)* REQUIRED\n\nThe name for the new project.\n\n`slug` *(string)*\n\nOptional slug for the new project. If not provided a slug is generated from the name.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:write`"
					},
					"response": []
				},
				{
					"name": "Create New Team",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"dirk_test-team\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/teams/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"teams",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/teams/create-a-new-team/](https://docs.sentry.io/api/teams/create-a-new-team/)\n\nCreate a new team bound to an organization. Only the name of the team is needed to create it, the slug can be auto generated.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team should be created for.\n\n### Body Parameters\n\n`name` *(string)* REQUIRED\n\nThe name of the team.\n\n`slug` *(string)*\n\nThe optional slug for this team. If not provided it will be auto generated from the name.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:write`"
					},
					"response": []
				},
				{
					"name": "Delete Team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								""
							],
							"variable": [
								{
									"key": "team_slug",
									"value": "new-team"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/delete-a-team/](https://docs.sentry.io/api/teams/delete-a-team/)\n\nSchedules a team for deletion.\n\nNote: Deletion happens asynchronously and therefore is not immediate. However once deletion has begun the state of a project changes and will be hidden from most public views.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to get.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:admin`"
					},
					"response": []
				},
				{
					"name": "List Team Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/projects/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								"projects",
								""
							],
							"variable": [
								{
									"key": "team_slug",
									"value": "sentry-demos",
									"description": "The slug of the team to get."
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/list-a-teams-projects/](https://docs.sentry.io/api/teams/list-a-teams-projects/)\n\nReturn a list of projects bound to a team.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to get.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `project:read`"
					},
					"response": []
				},
				{
					"name": "List Organization Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/teams/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"teams",
								""
							]
						},
						"description": "[https://docs.sentry.io/api/teams/list-an-organizations-teams/](https://docs.sentry.io/api/teams/list-an-organizations-teams/)\n\nReturns a list of teams bound to a organization.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization for which the teams should be listed.\n\n### Query Parameters:\n\n`cursor` *(string)*\n\nA pointer to the last object fetched and its sort order; used to retrieve the next or previous results.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								""
							],
							"variable": [
								{
									"key": "team_slug",
									"value": "new-team"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/retrieve-a-team/](https://docs.sentry.io/api/teams/retrieve-a-team/)\n\nReturn details on an individual team.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to get.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:read`"
					},
					"response": []
				},
				{
					"name": "Retrieve Team Event Counts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/stats/?stat=received",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								"stats",
								""
							],
							"query": [
								{
									"key": "stat",
									"value": "received"
								},
								{
									"key": "since",
									"value": null,
									"disabled": true
								},
								{
									"key": "until",
									"value": null,
									"disabled": true
								},
								{
									"key": "resolution",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "team_slug",
									"value": "quickstark"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/retrieve-event-counts-for-a-team/](https://docs.sentry.io/api/teams/retrieve-event-counts-for-a-team/)\n\nCaution: this endpoint may change in the future without notice.\n\nReturn a set of points representing a normalized timestamp and the number of events seen in the period.\n\nQuery ranges are limited to Sentry’s configured time-series resolutions.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to get.\n\n### Query Parameters:\n\n`stat` *(string)*choices:\n\n*   `received`\n*   `rejected`\n    \n\nThe name of the stat to query `(\"received\", \"rejected\")`.\n\n`since` *(string)*\n\nA timestamp to set the start of the query in seconds since UNIX epoch.\n\n`until` *(string)*\n\nA timestamp to set the end of the query in seconds since UNIX epoch.\n\n`resolution` *(string)*choices:\n\n*   `10s`\n*   `1h`\n*   `1d`\n    \n\nAn explicit resolution to search for (one of `10s`, `1h`, and `1d`).\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:read`"
					},
					"response": []
				},
				{
					"name": "Update Team",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Netlify Team\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sentry.io/api/0/teams/{{organization_slug}}/:team_slug/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"teams",
								"{{organization_slug}}",
								":team_slug",
								""
							],
							"variable": [
								{
									"key": "team_slug",
									"value": "netlify"
								}
							]
						},
						"description": "[https://docs.sentry.io/api/teams/update-a-team/](https://docs.sentry.io/api/teams/update-a-team/)\n\nUpdate various attributes and configurable settings for the given team.\n\n### Path Parameters\n\n`organization_slug` *(string)* REQUIRED\n\nThe slug of the organization the team belongs to.\n\n`team_slug` *(string)* REQUIRED\n\nThe slug of the team to get.\n\n### Body Parameters\n\n`name` *(string)* REQUIRED\n\nThe new name for the team.\n\n`slug` *(string)*\n\nA new slug for the team. It has to be unique and available.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://docs.sentry.io/api/auth) requires one of the following scopes:\n\n*   `team:write`"
					},
					"response": []
				}
			]
		},
		{
			"name": "Unofficial Endpoints",
			"item": [
				{
					"name": "Retrieve Event Owner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/events/:event_id/owners/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"events",
								":event_id",
								"owners",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "event_id",
									"value": "3445720f66c841e5937068ccec6f455f"
								}
							]
						},
						"description": "[https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/](https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/)\n\nReturn owners details for on an individual event.\n\n### Path Parameters\n\n`organization_slug` _(string)_ REQUIRED\n\nThe slug of the organization the event belongs to.\n\n`project_slug` _(string)_ REQUIRED\n\nThe slug of the project the event belongs to.\n\n`event_id` _(string)_ REQUIRED\n\nThe ID of the event to retrieve. It is the hexadecimal ID as reported by the client.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://desktop.postman.com/?desktopVersion=9.31.0&userId=314074&teamId=0) requires one of the following scopes:\n\n\\*   `project:read`\n    \n\nAuthorizationBearer TokenThis request is using an authorization helper from collection Dirk's Sentry CollectionPath Variablesevent_id57af509826ca4a8197d4a7e5d1e18261"
					},
					"response": []
				},
				{
					"name": "Retrive Audit Log",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/events/:event_id/owners/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"events",
								":event_id",
								"owners",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "event_id",
									"value": "3445720f66c841e5937068ccec6f455f"
								}
							]
						},
						"description": "[https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/](https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/)\n\nReturn owners details for on an individual event.\n\n### Path Parameters\n\n`organization_slug` _(string)_ REQUIRED\n\nThe slug of the organization the event belongs to.\n\n`project_slug` _(string)_ REQUIRED\n\nThe slug of the project the event belongs to.\n\n`event_id` _(string)_ REQUIRED\n\nThe ID of the event to retrieve. It is the hexadecimal ID as reported by the client.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://desktop.postman.com/?desktopVersion=9.31.0&userId=314074&teamId=0) requires one of the following scopes:\n\n\\*   `project:read`\n    \n\nAuthorizationBearer TokenThis request is using an authorization helper from collection Dirk's Sentry CollectionPath Variablesevent_id57af509826ca4a8197d4a7e5d1e18261"
					},
					"response": []
				},
				{
					"name": "Update Alert",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/projects/{{organization_slug}}/:project_slug/events/:event_id/owners/",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"events",
								":event_id",
								"owners",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": null
								},
								{
									"key": "event_id",
									"value": "3445720f66c841e5937068ccec6f455f"
								}
							]
						},
						"description": "[https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/](https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/)\n\nReturn owners details for on an individual event.\n\n### Path Parameters\n\n`organization_slug` _(string)_ REQUIRED\n\nThe slug of the organization the event belongs to.\n\n`project_slug` _(string)_ REQUIRED\n\nThe slug of the project the event belongs to.\n\n`event_id` _(string)_ REQUIRED\n\nThe ID of the event to retrieve. It is the hexadecimal ID as reported by the client.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://desktop.postman.com/?desktopVersion=9.31.0&userId=314074&teamId=0) requires one of the following scopes:\n\n\\*   `project:read`\n    \n\nAuthorizationBearer TokenThis request is using an authorization helper from collection Dirk's Sentry CollectionPath Variablesevent_id57af509826ca4a8197d4a7e5d1e18261"
					},
					"response": []
				},
				{
					"name": "Update Issue Ownership Rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{organization_slug}}.sentry.io/api/0/projects/{{organization_slug}}/:project_slug/ownership/",
							"protocol": "https",
							"host": [
								"{{organization_slug}}",
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"ownership",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "images"
								}
							]
						},
						"description": "[https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/](https://sentry.io/api/0/projects/{org-slug}/{project-slug}/events/{event-id}/owners/)\n\nReturn owners details for on an individual event.\n\n### Path Parameters\n\n`organization_slug` _(string)_ REQUIRED\n\nThe slug of the organization the event belongs to.\n\n`project_slug` _(string)_ REQUIRED\n\nThe slug of the project the event belongs to.\n\n`event_id` _(string)_ REQUIRED\n\nThe ID of the event to retrieve. It is the hexadecimal ID as reported by the client.\n\n### Scopes\n\nYou need to [authenticate via bearer auth token.](https://desktop.postman.com/?desktopVersion=9.31.0&userId=314074&teamId=0) requires one of the following scopes:\n\n\\*   `project:read`\n    \n\nAuthorizationBearer TokenThis request is using an authorization helper from collection Dirk's Sentry CollectionPath Variablesevent_id57af509826ca4a8197d4a7e5d1e18261"
					},
					"response": []
				},
				{
					"name": "Retrieve All Organization Issues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://sentry.io/api/0/organizations/{{organization_slug}}/issues/?end=2022-10-11T20%3A22%3A09&limit=1000&query=&start=2021-10-11T20%3A22%3A09",
							"protocol": "https",
							"host": [
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"organizations",
								"{{organization_slug}}",
								"issues",
								""
							],
							"query": [
								{
									"key": "end",
									"value": "2022-10-11T20%3A22%3A09"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "query",
									"value": ""
								},
								{
									"key": "start",
									"value": "2021-10-11T20%3A22%3A09"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Issue Ownership Rules",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"raw\":\"#Testing\\npath:src/views/checkout dirk@quickstark.com\\nurl:https://example.com/checkout dirk@quickstark.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{organization_slug}}.sentry.io/api/0/projects/{{organization_slug}}/:project_slug/ownership/",
							"protocol": "https",
							"host": [
								"{{organization_slug}}",
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project_slug",
								"ownership",
								""
							],
							"variable": [
								{
									"key": "project_slug",
									"value": "images"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Team to Project",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"raw\":\"#Testing\\npath:src/views/checkout dirk@quickstark.com\\nurl:https://example.com/checkout dirk@quickstark.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{organization_slug}}.sentry.io/api/0/projects/{{organization_slug}}/:project/teams/:team/",
							"protocol": "https",
							"host": [
								"{{organization_slug}}",
								"sentry",
								"io"
							],
							"path": [
								"api",
								"0",
								"projects",
								"{{organization_slug}}",
								":project",
								"teams",
								":team",
								""
							],
							"variable": [
								{
									"key": "project",
									"value": "java-3a"
								},
								{
									"key": "team",
									"value": "aaa"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "organization_slug",
			"value": "demo",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "sntryu_XXX",
			"type": "string"
		}
	]
}